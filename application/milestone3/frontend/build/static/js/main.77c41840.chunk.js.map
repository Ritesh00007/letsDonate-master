{"version":3,"sources":["components/backend/currentUser.js","images/charity.png","components/backend/loginBackend.js","components/NavBar.js","components/Card.js","components/FundraiserCard.js","components/Home.js","components/Products.js","components/Fundraisers.js","images/user.jpg","components/backend/editUser.js","components/backend/deleteUser.js","components/User.js","components/backend/deleteProduct.js","components/backend/editPost.js","components/ProductPost.js","components/backend/deleteFund.js","components/backend/editFund.js","components/FundraiserPost.js","components/searchResult.js","components/Chat.js","components/MessageList.js","components/backend/history.js","components/DisplayMessage.js","components/ChatSpace.js","components/terms.js","components/backend/registerBackend.js","components/register.js","components/backend/recoveryBackend.js","components/recovery.js","components/UserCard.js","components/AvailableChatUsers.js","App.js","index.js"],"names":["currentUser","exports","getUser","JSON","parse","sessionStorage","getItem","setItem","stringify","setUser","user","setUserLogout","bcrypt","require","axios","loginData","email","password","document","forms","loginForm","value","console","log","searchable","post","then","result","data","success","users","compare","err","isMatch","window","location","reload","alert","catch","exception","NavBar","props","state","items","fundraisers","searchTerm","get","res","setState","keySearch","getElementById","this","localeCompare","contentStyle","width","trigger","className","modal","nested","close","id","type","name","placeholder","onClick","to","replace","Navbar","collapseOnSelect","expand","Brand","src","charity","alt","Toggle","aria-controls","Collapse","Nav","Form","inline","FormControl","onChange","getKey","bind","pathname","products","reloadButton","Component","Card","image","productImage","description","onError","e","target","FundraiserCard","cardImage","title","endorsement","requiredAmount","Home","funds","sort","reverse","map","item","Products","filterCategory","checked","filter","obj","productType","allProducts","occurrences","i","j","length","Object","keys","setCategory","Grid","container","spacing","sm","md","getCategories","Fundraisers","amountRequired","owner","FormGroup","Label","Input","word","des","selected","disabled","amountNeeded","CustomInput","accept","form","FormData","append","files","headers","fundType","createPost","editUserData","newName","newEmail","newZipcode","newProfileImage","currentPassword","newPassword","currentCurrentUser","recovery1","recovery2","claimedProducts","editUserForm","compareSync","salt","genSaltSync","hash","hashSync","zipcode","userImage","fileLocation","deleteUserFunction","pageRedirect","deleteUserForm","response","User","singleUser","pageName","match","params","undefined","find","userEmail","currentUserEmail","currentProfileEmail","method","productName","getAll","xs","editUserProfile","deleteUserProfile","p","deleteProductsFunction","editPost","ProductPost","singleProduct","product","productItem","productOwner","deletePost","deleteFundFunction","editFund","FundraiserPost","random","copied","singleFund","fund","max","rand","parseInt","Math","fundraiserItem","text","onCopy","style","color","copyText","href","height","receviedDonations","elem","innerHTML","endorsePost","donateButton","searchResult","searchTable","term","table","Chat","scrollToBottom","messagesEnd","scrollIntoView","behavior","display","sender","messages","senderId","DUMMY_DATA","float","clear","ref","el","required","closeChat","MessageList","otherUser","redirectClick","DUMMY_USER","openChat","closeList","createBrowserHistory","DisplayMessage","ChatSpace","message","room","filled","queryString","search","event","preventDefault","messageContent","fullMessage","concat","sendMessage","termsAndConditions","formData","password2","profileImage","registerForm","register","for","terms","recoveryData","recoveryForm","recovery","UserCard","AvailableChatUsers","App","client","history","path","component","exact","SearchResult","Error","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.77c41840.chunk.js","sourcesContent":["// dummy values\r\nlet currentUser =\r\n{\r\n  \"name\": \"nouser\",\r\n  \"email\": \"noemail@email.com\",\r\n  \"zipcode\": \"12345\"\r\n};\r\n\r\n// need to add logic to check if input is valid\r\n\r\n// gets current user\r\nexports.getUser = function () {\r\n  if (JSON.parse(sessionStorage.getItem(currentUser)) == null) // if for some reason the variable is empty, set it again\r\n  {\r\n    sessionStorage.setItem(currentUser, JSON.stringify(currentUser));\r\n  }\r\n\r\n  return JSON.parse(sessionStorage.getItem(currentUser));\r\n};\r\n\r\n// sets the current user after logging in\r\nexports.setUser = function (user) {\r\n  sessionStorage.setItem(currentUser, JSON.stringify(user));\r\n};\r\n\r\n// if user logs out, set back to dummy variable\r\nexports.setUserLogout = function() {\r\n  sessionStorage.setItem(currentUser, JSON.stringify(currentUser));\r\n};","export default __webpack_public_path__ + \"static/media/charity.9b4964ce.png\";","const bcrypt = require('bcryptjs');\r\nconst axios = require('axios');\r\n\r\nconst currentUser = require('./currentUser.js');\r\n\r\nconst loginData = function() {\r\n    let email;\r\n    let password;\r\n\r\n    if(!document.forms.loginForm.email.value || !document.forms.loginForm.password.value) // if text boxes are empty\r\n    {\r\n        alert(\"Text fields are empty!\");\r\n        return;\r\n    }\r\n    else\r\n    {\r\n       email = document.forms.loginForm.email.value;\r\n       password = document.forms.loginForm.password.value;\r\n    }\r\n\r\n    console.log(email, password);\r\n\r\n    // similar code to searching api\r\n    let user;\r\n    let searchable = {};\r\n    \r\n    searchable[\"searchEmail\"] = email; // login searches registered user database by email\r\n    axios.post('/api/loginUser', searchable)\r\n    .then((result) => {\r\n        if(!result.data.success){\r\n            alert(\"Failed Search\");\r\n        }else{\r\n            user = result.data.users; // returns the data from the database\r\n\r\n            // compare login password with encrypted password from database\r\n            bcrypt.compare(password, user[0].password, function(err, isMatch){\r\n                if(err) throw err;\r\n                if(isMatch)\r\n                {\r\n                    console.log(\"Password Match\");\r\n                    currentUser.setUser(user[0]); // sets the current user\r\n                    console.log(currentUser.getUser());\r\n                    window.location.reload(); // reloads page to render proper buttons on navbar\r\n                }\r\n                else\r\n                {\r\n                    alert(\"Wrong Password\");\r\n                }\r\n            });\r\n\r\n        }\r\n    })\r\n    .catch(exception => {\r\n        alert(\"Failed Search\");\r\n    })\r\n}\r\n\r\nexport default loginData;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Navbar, Nav, Form, FormControl, Button, InputGroup  } from 'react-bootstrap';\r\nimport { LinkContainer,  } from 'react-router-bootstrap';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport './css/NavBar.css';\r\nimport './css/PopUps.css';\r\nimport charity from '../images/charity.png';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport Popup from 'reactjs-popup';\r\nimport 'reactjs-popup/dist/index.css';\r\nimport axios from 'axios';\r\n\r\nimport loginData from './backend/loginBackend.js'; // sends login form data to check against the database\r\nimport currentUser from './backend/currentUser.js'; // helper functions to set and get current logged in user\r\n\r\n/*\r\n**  NavBar.js\r\n**\r\n**  This component remains at the top of the application at all times and serves as a means to navigate the website.\r\n*/\r\nclass NavBar extends Component {\r\n    // These are the filtered items that will be passed should a user add keywords for the search.\r\n    state = {\r\n        items: [],\r\n        fundraisers: [],\r\n        searchTerm: ''\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get(`/api`)\r\n            .then(res => {\r\n                const items = res.data;\r\n                this.setState({ items });\r\n            }).catch(exception => {\r\n                alert(\"Failed Search\");\r\n            })\r\n    }\r\n\r\n    // This function uses the keyword input in the searchbar to get a filtered list of items from the backend\r\n    getKey() {\r\n        const keySearch = document.getElementById(\"searchType\").value;\r\n\r\n        this.setState({ searchTerm: keySearch });\r\n    }\r\n\r\n    // function that checks current logged in user and rederns the appropriate buttons\r\n    reloadButton() {\r\n        let tempUserEmail = \"noemail@email.com\";\r\n\r\n        if (tempUserEmail.localeCompare(this.props.currentUser) == 0) // checks if there is a current user, if there isn't show login button\r\n        {\r\n            return (\r\n                <div>\r\n                    <Popup contentStyle={{ width: \"auto\" }}\r\n                        trigger={<button className=\"buttonLink\"> Login/SignUp </button>}\r\n                        modal\r\n                        nested\r\n\r\n                    >\r\n                        {close => (\r\n                            <div>\r\n                                <form id=\"loginForm\" className='login-form'>\r\n                                    <h1>Login to Let's Donate</h1>\r\n                                    <input\r\n                                        className='email'\r\n                                        type='email'\r\n                                        name='email'\r\n                                        placeholder=\"Email\"\r\n                                    />\r\n                                    <input\r\n                                        className='password'\r\n                                        type='password'\r\n                                        name='password'\r\n                                        placeholder=\"Password\"\r\n                                    />\r\n                                    <br />\r\n                                    <input\r\n                                        className='login-button'\r\n                                        type='button'\r\n                                        value='Log In'\r\n                                        onClick={() => { loginData() }}\r\n                                    // calls function from loginBackend.js and passes login information\r\n                                    />\r\n                                    <br />\r\n                                    <Link\r\n                                        className='signup-button'\r\n                                        type='button'\r\n                                        to={\"/register\"}\r\n                                        onClick={close}\r\n                                    >SignUp</Link>\r\n                                    <br />\r\n                                    <Link\r\n                                        className='reset-password-button'\r\n                                        type='button'\r\n                                        to={\"/recovery\"}\r\n                                        onClick={close}\r\n                                    >Reset Password</Link>\r\n                                </form>\r\n                            </div>\r\n                        )}\r\n                    </Popup>\r\n                </div>\r\n            )\r\n        }\r\n        else // if logged in, show logout button\r\n        {\r\n            return (\r\n                <div className=\"accountViews\">\r\n                    <button className=\"buttonLink\" onClick={() => {\r\n                        currentUser.setUserLogout();\r\n                        window.location.replace('/');\r\n                    }}> Logout </button>\r\n\r\n                    {/* This button takes a user to their user page if their signed in */}\r\n                    <Link className='userLink' to={`/User/${this.props.currentUser}`/* links to product page using product name */}>\r\n                        <AccountCircleIcon />\r\n                    </Link>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    render() { return (\r\n        <Navbar className=\"NavBar\" collapseOnSelect expand=\"lg\">\r\n            <LinkContainer className='link' to={\"/\"}>\r\n                <Navbar.Brand>\r\n                    <img className=\"logo\" \r\n                        src={charity}\r\n                        alt=\"\"\r\n                    />\r\n                    <div className='appTitle'>\r\n                        <p>let'sDonate</p>\r\n                    </div>\r\n                </Navbar.Brand>\r\n            </LinkContainer>\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                <Nav className=\"mr-auto search\">\r\n                    {/* This is the searchbar */}\r\n                    <Form inline>\r\n                        <FormControl id=\"searchType\" type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" onChange={this.getKey.bind(this)}></FormControl>\r\n                        in:\r\n                        <Link className='link' to={{\r\n                            pathname: `/search/${\"products\"}/${this.state.searchTerm}`,\r\n                            products: this.state.items\r\n                        }}>\r\n                            <button className=\"buttonLink\">Products</button>\r\n                        </Link>\r\n                        <div className=\"searchLine\"/>\r\n                        <Link className='link' to={{\r\n                            pathname: `/search/${\"fundraisers\"}/${this.state.searchTerm}`,\r\n                            fundraisers: this.state.fundraisers\r\n                        }}>\r\n                            <button className=\"buttonLink\">Fundraisers</button>\r\n                        </Link>\r\n                    </Form>\r\n                </Nav>\r\n                <Nav>\r\n                    {/* This is the button to allow users to log in/sign up through a pop up */}\r\n                    {this.reloadButton()}\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    );}\r\n}\r\n\r\nexport default NavBar;","import React, {useState, useEffect} from 'react';\r\nimport \"./css/Card.css\"; \r\nimport { Link } from 'react-router-dom';\r\nimport { ElasticBeanstalk } from 'aws-sdk';\r\n\r\n/*\r\n**  Card.js\r\n**\r\n**  This component is the thumbnail for each product post\r\n*/\r\nfunction Card( {id, name, description, productImage} ) {\r\n\r\n    let image;\r\n    \r\n    if(productImage !== '' && productImage !== null) // checks if product has an image from the database\r\n        image = productImage; \r\n    else\r\n        image = \"../images/charity.png\"; // default image\r\n    \r\n    return (\r\n        <Link className='link' to={`/Product/${id}`/* links to product page using product name */}>\r\n            <div className=\"card\">\r\n                <img  className=\"cardImage border border-light\" \r\n                    src={image}\r\n                    onError={(e) => {\r\n                        e.target.src = '../images/charity.png' // fallback image\r\n                    }} \r\n                alt=\"\"/>\r\n\r\n                <h2>{name}</h2>\r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import React, { Component } from 'react'\r\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\r\nimport Star from \"@material-ui/icons/Star\";\r\nimport './css/FundraiserCard.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\n/*\r\n**  FundraiserCard.js\r\n**\r\n**  This component is the thumbnail for each fundraiser post\r\n*/\r\n\r\nfunction FundraiserCard( {id, title, description, image, endorsement, requiredAmount} ) {\r\n\r\n    let cardImage;\r\n    \r\n    if(image !== '' && image !== null) // checks if product has an image from the database\r\n    {\r\n        cardImage = image;\r\n    }  \r\n    else\r\n    {\r\n        cardImage = \"../images/charity.png\"; // default image\r\n    }\r\n    \r\n    return (\r\n        <Link className='link' to={`/Fundraiser/${id}`/* links to product page using product name */}>\r\n            <div className=\"fundCard\">\r\n                    <img src={cardImage} alt=\"\" />\r\n                    <FavoriteBorderIcon className=\"heart\" />\r\n                    <div className=\"rightData\">\r\n                        <div className=\"rightDataTop\">\r\n                            <h2>{title}</h2>\r\n                            <p>____</p>\r\n                            <p>{description}</p>\r\n                        </div>\r\n\r\n                        <div className=\"rightDataBottom\">\r\n                            <div className=\"starRating\">\r\n                                <Star className=\"star\" />\r\n                                    <p>\r\n                                        <strong>{endorsement}</strong>\r\n                                    </p>\r\n                            </div>\r\n                            <div className=\"amountRequired\">\r\n                                <h2>Goal ${requiredAmount}</h2>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default FundraiserCard\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Card from './Card.js';\r\nimport './css/Home.css';\r\nimport FundraiserCard from './FundraiserCard';\r\n\r\n/*\r\n**  Home.js\r\n**\r\n**  This is the landing page, the first page users will see when they reach the website.\r\n*/\r\nclass Home extends Component {\r\n  // These are to be the products that appear on the featured lists within the page.\r\n  state = {\r\n    items: [],\r\n    funds: []\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  // This gets all the items from the backend.\r\n  componentDidMount() {\r\n    axios.get(`/api`)\r\n      .then(res => {\r\n        const items = res.data;\r\n        this.setState({ items });\r\n        console.log(\"See Below\");\r\n      })\r\n\r\n    axios.get(`/api/Fundraisers`)\r\n      .then(res => {\r\n        const funds = res.data;\r\n        this.setState({ funds });\r\n      })\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state);\r\n    return (\r\n      <div className=\"Home\">\r\n\r\n        {/* This is the landing banner and is supposed to be what draws users in and explains what the website is about. */}\r\n        <div className=\"LandingBanner-bg\"><div className=\"LandingBanner\">\r\n          <h1>Let's Donate</h1>\r\n          <p className=\"statement\">\r\n            Let's Donate is the inbetween <br />\r\n            for people that want to give  <br />\r\n            donations directly to those that <br />\r\n            need it and people that seek <br />\r\n            out help in their time of need. <br />\r\n          </p>\r\n        </div></div>\r\n        <hr className=\"separator\"></hr>\r\n        <div>\r\n          <h2 className=\"featured\">Featured</h2>\r\n        </div>\r\n        <hr />\r\n\r\n        {/* \r\n          This is the featured list of products available with a button to the products page\r\n          and each of the cards links to their post.\r\n         */}\r\n        <Link className='buttonLink' to={\"/Products\"}>View All Products</Link>\r\n        <div className=\"scrollmenu\">\r\n          {this.state.items.sort().reverse().map(item => <Card id={item.id} name={item.name} description={item.description} productImage={item.productImage} />)}\r\n        </div>\r\n        <hr />\r\n\r\n        {/* \r\n          This is the featured list of fundraisers available with a button to the fundraisers page\r\n          and each of the cards links to their post.\r\n         */}\r\n        <Link className='buttonLink' to={\"/Fundraisers\"}>View All Fundraisers</Link>\r\n        <div className=\"scrollmenu\">\r\n        {this.state.funds.sort().reverse().map(item =>\r\n            <FundraiserCard id={item.id} title={item.title} description={item.description} image={item.image} endorsement={item.endorsement} requiredAmount={item.requiredAmount} />\r\n          )}\r\n        </div>\r\n        <hr />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Home;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from './Card.js';\r\nimport './css/Products.css';\r\n\r\n/*\r\n**  Products.js\r\n**\r\n**  This displays a map of all the available products from the database\r\n**  and should allow the user to filter and sort the map.\r\n*/\r\nclass Products extends Component {\r\n    // The items that will appear in the map.\r\n    state = {\r\n        items: []\r\n      }\r\n\r\n    //gets the whole list of items from the backend.\r\n    componentDidMount() {\r\n        axios.get(`/api`)\r\n          .then(res => {\r\n            const items = res.data;\r\n            this.setState({ items });\r\n        })\r\n      }\r\n\r\n    allProducts() {\r\n        axios.get(`/api`)\r\n          .then(res => {\r\n            const items = res.data;\r\n            this.setState({ items });\r\n          })\r\n    }\r\n\r\n    setCategory(filterCategory)\r\n    {      \r\n        // change state based on checked box\r\n        let checkBox = document.getElementById(filterCategory);\r\n        if(checkBox.checked == true)\r\n        {\r\n            // filters to searched category\r\n            let countCategory = this.state.items.filter((obj) => {return obj.productType === filterCategory});\r\n            const items = countCategory; \r\n            this.setState({items});\r\n            //console.log(\"State:\", this.state);\r\n            //console.log(\"Filtered\", countCategory);\r\n        }\r\n        else this.allProducts();\r\n    }\r\n\r\n    getCategories()\r\n    {\r\n        // gets the list of categories and the count in each\r\n        let occurrences = { };\r\n        for(let i = 0, j = this.state.items.length; i < j; i++) \r\n        {\r\n            occurrences[this.state.items[i].productType] = (occurrences[this.state.items[i].productType] || 0) + 1;\r\n        }\r\n        //console.log(occurrences);\r\n\r\n        // returns a map of the categories and their count\r\n        return (\r\n            Object.keys(occurrences).sort().map(item => \r\n            <div><label><input type=\"checkbox\" id={item} onClick={() => {this.setCategory(item)}}/>{item} ({occurrences[item]})</label></div>\r\n            )\r\n        );\r\n    }\r\n\r\n  render() {\r\n    return (\r\n        <div className=\"h-75 x-1 grid\">\r\n          <Grid container spacing={3}>\r\n            {/* filters */}\r\n            <Grid item sm={12} md={2} className=\"filters border-right border-dark\">\r\n              <h1>Filters</h1>\r\n              {this.getCategories()}\r\n            </Grid>\r\n            {/* products */}\r\n            <Grid item sm={12} md={10}>\r\n              <div className=\"items\">\r\n                {this.state.items.sort().reverse().map(item => \r\n                  <Card id={item.id} name={item.name} description={item.description} productImage={item.productImage}/>\r\n                )}\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n    );\r\n  }\r\n}\r\nexport default Products;","import React, { Component } from 'react';\r\nimport FundraiserCard from './FundraiserCard';\r\nimport { Link } from 'react-router-dom';\r\nimport '../App.css';\r\nimport './css/Fundraisers.css';\r\nimport axios from 'axios';\r\nimport { Form, Label, Input, FormGroup, CustomInput } from 'reactstrap';\r\nimport Popup from 'reactjs-popup';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport currentUser from './backend/currentUser.js';\r\nimport loginData from './backend/loginBackend.js';\r\n\r\n/*\r\n**  Fundraiser.js\r\n**\r\n**  This displays a list of all the available fundraiser from the database\r\n**  and should allow the user to filter and sort the list.\r\n*/\r\nclass Fundraisers extends Component {\r\n\r\n  state = {\r\n    items: []\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get(`/api/Fundraisers`)\r\n      .then(res => {\r\n        const items = res.data;\r\n        this.setState({ items });\r\n      })\r\n  }\r\n\r\n  createPost() {\r\n    var title;\r\n    var description;\r\n    var amountRequired;\r\n    var owner = this.props.currentUser;\r\n\r\n    // edit profile if current user is profile owner or an admin\r\n\r\n    let tempUserEmail = \"noemail@email.com\";\r\n\r\n    if (tempUserEmail.localeCompare(owner) !== 0) // checks if there is a current user, if there isn't show login button\r\n    {\r\n      return (\r\n        <Popup\r\n          contentStyle={{width: \"auto\"}}\r\n          trigger={<button className=\"postButton\"> Create a new Fundraiser </button>}\r\n          modal\r\n          nested\r\n        >\r\n          {close => (\r\n            <div className=\"popup\">\r\n              <button className=\"close\" onClick={close}>\r\n                &times;\r\n                  </button>\r\n              <div className=\"header\"> <strong>CREATE NEW FUNDRAISER </strong></div>\r\n              <div className=\"content\">\r\n                <Form id='newFundraiserForm'>\r\n                  <FormGroup>\r\n                    <Label><strong>Title: </strong></Label>\r\n                    <Input value={title}\r\n                      onChange={(word) => {\r\n                        title = (word.target.value);\r\n                      }}\r\n                    />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <br />\r\n                    <Label><strong>Description: </strong></Label>\r\n                    <Input className=\"descriptionText\" value={description}\r\n                      onChange={(des) => {\r\n                        description = (des.target.value);\r\n                      }}\r\n                    />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <br />\r\n                    <Label><strong>Type: </strong></Label>\r\n                    <select name=\"productType\" id=\"productType\">\r\n                      <option value=\"1\" selected disabled>Please select a type</option>\r\n                      <option value=\"Medical\">Medical</option>\r\n                      <option value=\"Education\">Education</option>\r\n                      <option value=\"Community\">Community</option>\r\n                      <option value=\"Other\">Other</option>\r\n                    </select>\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <br />\r\n                    <Label><strong>Amount Required in USD: </strong></Label>\r\n                    <Input value={amountRequired}\r\n                      onChange={(amountNeeded) => {\r\n                        amountRequired = (amountNeeded.target.value);\r\n                      }}\r\n                    />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <br />\r\n                    <CustomInput type=\"file\" id=\"productImage\" accept=\"image/jpg,image/jpeg,image/png\" />\r\n                  </FormGroup>\r\n                </Form>\r\n              </div>\r\n              <div className=\"actions\">\r\n\r\n                {/* This posts the input data into the backend */}\r\n                <button\r\n                  className=\"button\"\r\n                  onClick={() => {\r\n                    if (title.length > 0 && description.length > 0) {\r\n                      var productImage = document.getElementById(\"productImage\");\r\n                      var form = new FormData();\r\n                      form.append(\"imageFile\", productImage.files[0]);\r\n                      form.append(\"title\", title);\r\n                      form.append(\"description\", description);\r\n                      form.append(\"requiredAmount\", amountRequired);\r\n                      form.append(\"endorsement\", 0);\r\n                      form.append(\"fundType\", document.getElementById(\"productType\").value);\r\n                      form.append(\"owner\", owner);\r\n                      axios.post(\"/api/postFundraiser\", form, { headers: { 'content-type': \"multipart/form-data\" } })\r\n                        .then((result) => {\r\n                          if (result.data.success) {\r\n                            alert(\"Successfully Posted\");\r\n                            window.location.reload();\r\n                          } else {\r\n                            alert(\"Post Failure Occurred\");\r\n                          }\r\n                        })\r\n                        .catch(exception => {\r\n                          alert(\"Post Failure Occurred\");\r\n                        })\r\n                    }\r\n                  }}\r\n                >\r\n                  SUBMIT\r\n                    </button>\r\n              </div>\r\n              <button className=\"button\"\r\n                onClick={() => {\r\n\r\n                }}\r\n              >\r\n                Trouble Posting?\r\n                    </button>\r\n            </div>\r\n          )}\r\n        </Popup>\r\n      )\r\n    }\r\n    else // popup to login\r\n    {\r\n      return (\r\n        <div>\r\n        <Popup contentStyle={{width: \"auto\"}}\r\n            trigger={<button className=\"postButton\"> Create a new Fundraiser </button>}\r\n            modal\r\n            nested\r\n        \r\n        >\r\n            {close => (\r\n                <div>\r\n                <form id=\"loginForm\" className='login-form'>\r\n                    <h1>Login to Let's Donate</h1>\r\n                        <input\r\n                            className='email'\r\n                            type='email'\r\n                            name='email'\r\n                            placeholder=\"Email\"\r\n                        />\r\n                        <input\r\n                            className='password'\r\n                            type='password'\r\n                            name='password'\r\n                            placeholder=\"Password\"\r\n                        />\r\n                        <br/>\r\n                        <input\r\n                            className='login-button'\r\n                            type='button'\r\n                            value='Log In'\r\n                            onClick={() => {loginData()}}\r\n                            // calls function from loginBackend.js and passes login information\r\n                        />\r\n                        <br/>\r\n                        <Link \r\n                            className='signup-button' \r\n                            type='button'\r\n                            to={\"/register\"}\r\n                            onClick={close}\r\n                        >SignUp</Link>\r\n                        <br/>\r\n                        <Link\r\n                            className='reset-password-button'\r\n                            type='button'\r\n                            to={\"/recovery\"}\r\n                            onClick={close}\r\n                        >Reset Password</Link>\r\n                </form>\r\n                </div>\r\n            )}\r\n        </Popup>\r\n        {/* This button takes a user to their user page if their signed in */}\r\n        { /* <Link className='userLink' to={\"/User\"}><AccountCircleIcon /></Link> */}\r\n    </div>\r\n    )\r\n    }\r\n\r\n  }\r\n\r\n  allProducts() {\r\n    axios.get(`/api/Fundraisers`)\r\n      .then(res => {\r\n        const items = res.data;\r\n        this.setState({ items });\r\n      })\r\n}\r\n\r\n  setCategory(filterCategory)\r\n    {      \r\n        // change state based on checked box\r\n        let checkBox = document.getElementById(filterCategory);\r\n        if(checkBox.checked == true)\r\n        {\r\n            // filters to searched category\r\n            let countCategory = this.state.items.filter((obj) => {return obj.fundType === filterCategory});\r\n            const items = countCategory; \r\n            this.setState({items});\r\n            //console.log(\"State:\", this.state);\r\n            //console.log(\"Filtered\", countCategory);\r\n        }\r\n        else this.allProducts();\r\n    }\r\n\r\n    getCategories()\r\n    {\r\n        // gets the list of categories and the count in each\r\n        let occurrences = { };\r\n        for(let i = 0, j = this.state.items.length; i < j; i++) \r\n        {\r\n            occurrences[this.state.items[i].fundType] = (occurrences[this.state.items[i].fundType] || 0) + 1;\r\n        }\r\n        //console.log(occurrences);\r\n\r\n        // returns a map of the categories and their count\r\n        return (\r\n            Object.keys(occurrences).sort().map(item => \r\n            <div className=\"checkbox\"><label><input type=\"checkbox\" id={item} onClick={() => {this.setCategory(item)}}/>{item} ({occurrences[item]})</label></div>\r\n            )\r\n        );\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"h-75 x-1 grid\">\r\n      <Grid container spacing={3}>\r\n        {/* filters */}\r\n        <Grid item sm={12} md={2} className=\"filters border-right border-dark\">\r\n          <h1>Filters</h1>\r\n          {this.getCategories()}\r\n        </Grid>\r\n        {/* products */}\r\n        <Grid item sm={12} md={10}>\r\n          <div className=\"makePost\">{this.createPost()}</div>\r\n          <div className=\"items\">\r\n            {this.state.items.sort().reverse().map(item =>\r\n              <FundraiserCard id={item.id} title={item.title} description={item.description} image={item.image} endorsement={item.endorsement} requiredAmount={item.requiredAmount} />\r\n            )}\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n    );\r\n  }\r\n}\r\nexport default Fundraisers;","export default __webpack_public_path__ + \"static/media/user.d2a7bd94.jpg\";","import currentUser from './currentUser.js';\r\n\r\nconst bcrypt = require('bcryptjs');\r\nconst axios = require('axios');\r\n\r\nconst editUserData = function() {\r\n    let form = new FormData();\r\n    let currentCurrentUser = currentUser.getUser(); // gets the current user data to modify later\r\n    let newName;\r\n    let newEmail;\r\n    let newZipcode;\r\n    let newProfileImage;\r\n    let currentPassword;\r\n    let newPassword;\r\n    let recovery1 = currentUser.getUser().recovery1;\r\n    let recovery2 = currentUser.getUser().recovery2;\r\n    let claimedProducts = currentUser.getUser().claimedProducts;\r\n\r\n    // checks if form is empty\r\n    if((!document.forms.editUserForm.newName.value && \r\n        !document.forms.editUserForm.newEmail.value &&\r\n        !document.forms.editUserForm.newZipcode.value &&\r\n        !document.forms.editUserForm.newProfileImage.value) &&\r\n        (!document.forms.editUserForm.currentPassword.value ||\r\n        !document.forms.editUserForm.newPassword.value))\r\n    {\r\n        alert(\"Fields cannot be empty!\");\r\n        return;\r\n    }\r\n\r\n    // checks both password fields\r\n    if(!document.forms.editUserForm.currentPassword.value || !document.forms.editUserForm.newPassword.value)\r\n    {\r\n        // if no new password, keep old password\r\n        currentPassword = currentUser.getUser().password;\r\n        form.append(\"password\", currentPassword);\r\n    }\r\n    else\r\n    {\r\n        currentPassword = document.forms.editUserForm.currentPassword.value;\r\n        newPassword = document.forms.editUserForm.newPassword.value;\r\n        \r\n        // compare current password with encrypted password\r\n        if(bcrypt.compareSync(currentPassword, currentUser.getUser().password) == 1)\r\n        {\r\n            // if a match, hash the new password\r\n            console.log(\"Password Match\");\r\n            let salt = bcrypt.genSaltSync(10);\r\n            let hash = bcrypt.hashSync(newPassword, salt);\r\n            form.append(\"password\", hash);\r\n        }\r\n        else\r\n        {\r\n            alert(\"Wrong Password\");\r\n            return;\r\n        }\r\n    }\r\n\r\n    // checks if there is new data for user\r\n    if(!document.forms.editUserForm.newName.value) newName = currentUser.getUser().name;\r\n    else\r\n    {\r\n        newName = document.forms.editUserForm.newName.value;\r\n        currentCurrentUser.name = newName;\r\n    }\r\n\r\n    if(!document.forms.editUserForm.newEmail.value) newEmail = currentUser.getUser().email;\r\n    else\r\n    {\r\n        newEmail = document.forms.editUserForm.newEmail.value;\r\n        currentCurrentUser.email = newEmail;\r\n    }\r\n\r\n    if(!document.forms.editUserForm.newZipcode.value) newZipcode = currentUser.getUser().zipcode;\r\n    else \r\n    {\r\n        newZipcode = document.forms.editUserForm.newZipcode.value;\r\n        currentCurrentUser.zipcode = newZipcode;\r\n    }\r\n\r\n    if(!document.forms.editUserForm.newProfileImage.value) \r\n    {\r\n        // uses current profile picture if no new pciture is uploaded\r\n        newProfileImage = currentUser.getUser().userImage; // string\r\n        form.append(\"imageFile\", newProfileImage);\r\n        console.log(newProfileImage);\r\n    }\r\n    else \r\n    {\r\n        newProfileImage = document.forms.editUserForm.newProfileImage; // object\r\n        form.append(\"imageFile\", newProfileImage.files[0]);\r\n        console.log(newProfileImage);\r\n    }\r\n\r\n    form.append(\"name\", newName);\r\n    form.append(\"email\", newEmail);\r\n    form.append(\"zipcode\", newZipcode);\r\n    form.append(\"recovery1\", recovery1);\r\n    form.append(\"recovery2\", recovery2);\r\n    form.append(\"claimedProducts\", claimedProducts);\r\n    form.append(\"currentEmail\", currentUser.getUser().email);\r\n    //console.log(form.getAll(\"password\"));\r\n\r\n    // calls api to edit user to database\r\n    axios.post(\"/api/editUser\", form, { headers: { 'content-type': \"multipart/form-data\"}})\r\n    .then((result) => {\r\n        if(result.data.success){\r\n            alert(\"Profile Updated Successfully\");\r\n            currentCurrentUser.userImage = result.data.fileLocation;\r\n            currentUser.setUser(currentCurrentUser); // sets the current user with the new data\r\n        }else{\r\n            alert(\"Profile Update Failed\");\r\n        }\r\n    })\r\n    .catch(exception => {\r\n        alert(\"Profile Update Failed\");\r\n    })\r\n\r\n    //window.location.reload(); // needed to refresh what is rendered on the navbar\r\n}\r\n\r\nexport default editUserData;","const axios = require('axios');\r\nconst currentUser = require('./currentUser.js');\r\n\r\nconst deleteUserFunction = function (email) {\r\n    console.log(email);\r\n\r\n    let pageRedirect = false;\r\n    let searchable = {};\r\n    searchable[\"searchEmail\"] = email; // login searches registered user database by email\r\n\r\n    if (document.forms.deleteUserForm.response.value.localeCompare(\"YES\") === 0) {\r\n        console.log(\"DELETE\");\r\n        axios.post(\"/api/deleteUser\", searchable)\r\n            .then((result) => {\r\n                if (result.data.success) {\r\n                    alert(\"Successfully Deleted\");\r\n                } else {\r\n                    alert(\"Post Failure Occurred\");\r\n                }\r\n            })\r\n\r\n        currentUser.setUserLogout();\r\n        // route to homepage and refresh navbar\r\n        pageRedirect = true;\r\n    }\r\n    else {\r\n        console.log(\"DON'T DELETE\");\r\n        alert(\"Profile not deleted\");\r\n        pageRedirect = false;\r\n    }\r\n\r\n    return pageRedirect;\r\n}\r\n\r\nexport default deleteUserFunction;","import React, { Component } from 'react';\r\nimport user from '../images/user.jpg';\r\nimport './css/User.css';\r\nimport './css/PopUps.css';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FundraiserCard from './FundraiserCard';\r\nimport Card from './Card';\r\nimport Popup from 'reactjs-popup';\r\nimport 'reactjs-popup/dist/index.css';\r\nimport axios from 'axios';\r\nimport { Form, Label, Input, FormGroup, CustomInput } from 'reactstrap';\r\n\r\nimport currentUser from './backend/currentUser.js'; // helper functions to set and get current logged in user\r\nimport editUserData from './backend/editUser.js';\r\nimport deleteUserFunction from './backend/deleteUser.js';\r\n\r\n/*\r\n**  User.js\r\n**\r\n**  This displays a users dashboard.\r\n**  This should also contain the items and posts they have put up (if any).\r\n*/\r\n\r\nclass User extends Component {\r\n  state = {\r\n    users: [], // saves entire list of users from database\r\n    user: {},  // saves a single user which will be displayed\r\n    items: [], // saves all products posted by user\r\n    funds: [] // saves all fundraisers posted by user\r\n  }\r\n\r\n  componentDidMount() {\r\n    // calls api to get list of all users from database\r\n    axios.get(`/api/allUsers`)\r\n      .then(res => {\r\n        const users = res.data;\r\n        this.setState({ users }); // sets the array with all database users\r\n\r\n        let pageName = this.props.match.params.email; // gets the url parameter\r\n        let singleUser;\r\n        if (this.state.user !== undefined) {\r\n          // sets the variable to the found user. User is found by comparing all user emails to the url paramter\r\n          singleUser = this.state.users.find((userEmail) => { return userEmail.email == pageName })\r\n        }\r\n        this.setState({ user: singleUser }); // sets the state of the single user variable with the found user\r\n      })\r\n\r\n    // find products posted by user\r\n    // similar code to searching api\r\n    let products;\r\n    let searchable = {};\r\n    searchable[\"searchEmail\"] = this.props.match.params.email; // login searches registered user database by email\r\n    axios.post('/api/findPosts', searchable)\r\n      .then((result) => {\r\n        if (!result.data.success) {\r\n          alert(\"Failed Search\");\r\n        }\r\n        else {\r\n          products = result.data.products; // returns the data from the database\r\n          this.setState({ items: products });\r\n        }\r\n      })\r\n\r\n    // find fundtaisers posted by user\r\n    // similar code to searching api\r\n    let fundraisers;\r\n    axios.post('/api/findFundraisers', searchable)\r\n      .then((result) => {\r\n        if (!result.data.success) {\r\n          alert(\"Failed Search\");\r\n        }\r\n        else {\r\n          fundraisers = result.data.fundraisers; // returns the data from the database\r\n          this.setState({ funds: fundraisers });\r\n        }\r\n      })\r\n  }\r\n\r\n  deleteUserProfile() {\r\n    let currentUserEmail = currentUser.getUser().email;\r\n    let currentProfileEmail = this.state.user.email;\r\n\r\n    if ((currentUserEmail.localeCompare(\"admin@admin.com\") === 0) || (currentUserEmail.localeCompare(currentProfileEmail) === 0)) // edit profile if current user is profile owner or an admin\r\n    {\r\n      return (\r\n        <Popup\r\n          contentStyle={{width: \"auto\"}}\r\n          trigger={<button className=\"postButton\"> Delete Profile </button>}\r\n          modal\r\n          nested\r\n        >\r\n          {close => (\r\n            <div className=\"popup\">\r\n              <button className=\"close\" onClick={close}>\r\n                &times;\r\n            </button>\r\n              <div className=\"header\"> <strong> Delete Profile </strong></div>\r\n              <div className=\"header\"> <strong> This Action Cannot Be Undone </strong></div>\r\n              <div className=\"content\">\r\n                <form id=\"deleteUserForm\" method=\"post\">\r\n                  <label><strong>Type \"YES\" to Confirm Deletion</strong></label>\r\n                  <input type=\"text\" name=\"response\" placeholder=\"YES\" />\r\n                  <br />\r\n                </form>\r\n              </div>\r\n              <div className=\"actions\">\r\n                <button\r\n                  className=\"button\"\r\n                  onClick={() => {\r\n                    let pageRedirect = deleteUserFunction(this.props.match.params.email);\r\n\r\n                    if (pageRedirect) {\r\n                      window.location.replace('/');\r\n                      //history.push('/');\r\n                    }\r\n                  }}\r\n                >DELETE\r\n              </button>\r\n              </div>\r\n\r\n            </div>\r\n          )}\r\n        </Popup>\r\n      )\r\n    }\r\n  }\r\n\r\n  editUserProfile() {\r\n    let currentUserEmail = currentUser.getUser().email;\r\n    let currentProfileEmail = this.state.user.email;\r\n\r\n    if ((currentUserEmail.localeCompare(\"admin@admin.com\") === 0) || (currentUserEmail.localeCompare(currentProfileEmail) === 0)) // edit profile if current user is profile owner or an admin\r\n    {\r\n      return (\r\n        <Popup \r\n          contentStyle={{width: \"auto\"}}\r\n          trigger={<button className=\"postButton\"> Edit Profile </button>}\r\n          modal\r\n          nested\r\n        >\r\n          {close => (\r\n            <div className=\"popup\">\r\n              <button className=\"close\" onClick={close}>\r\n                &times;\r\n              </button>\r\n              <div className=\"header\"> <strong> Edit Profile </strong></div>\r\n                <div className=\"content\">\r\n                  <form id=\"editUserForm\" method=\"post\">\r\n                    <label><strong>Name: </strong></label>\r\n                    <input type=\"text\" name=\"newName\" placeholder={this.state.user.name} />\r\n\r\n                    <br />\r\n                    <label><strong>Email: </strong></label>\r\n                    <input type=\"text\" name=\"newEmail\" placeholder={this.state.user.email} />\r\n\r\n                    <br />\r\n                    <label><strong>Zipcode: </strong></label>\r\n                    <input type=\"number\" name=\"newZipcode\" placeholder={this.state.user.zipcode} />\r\n\r\n                    <br />\r\n                    <label><strong>Current Password: </strong></label>\r\n                    <input type=\"password\" name=\"currentPassword\" placeholder=\"password\" />\r\n\r\n                    <br />\r\n                    <label><strong>New Password: </strong></label>\r\n                    <input type=\"password\" name=\"newPassword\" placeholder=\"password\" />\r\n\r\n                    <br />\r\n                    <label><strong>New Profile Image: </strong></label>\r\n                    <input type=\"file\" id=\"newProfileImage\" accept=\"image/jpg,image/jpeg,image/png\" />\r\n                  </form>\r\n                </div>\r\n              <div className=\"actions\">\r\n\r\n                {/* This posts the input data into the backend */}\r\n                <button\r\n                  className=\"button\"\r\n                  onClick={() => { editUserData() }}\r\n                >SUBMIT\r\n              </button>\r\n              </div>\r\n\r\n            </div>\r\n          )}\r\n        </Popup>\r\n      )\r\n    }\r\n  }\r\n\r\n  createPost() {\r\n    var productName;\r\n    var description;\r\n    var type;\r\n    let currentUserEmail = currentUser.getUser().email;\r\n    let currentProfileEmail = this.state.user.email;\r\n\r\n    if ((currentUserEmail.localeCompare(\"admin@admin.com\") === 0) || (currentUserEmail.localeCompare(currentProfileEmail) === 0)) // edit profile if current user is profile owner or an admin\r\n    {\r\n      return (\r\n        <Popup\r\n          contentStyle={{width: \"auto\"}}\r\n          trigger={<button className=\"postButton\"> Create a new Post </button>}\r\n          modal\r\n          nested\r\n        >\r\n          {close => (\r\n            <div className=\"popup\">\r\n              <button className=\"close\" onClick={close}>\r\n                &times;\r\n                  </button>\r\n              <div className=\"header\"> <strong>CREATE A POST </strong></div>\r\n              <div className=\"content\">\r\n                <Form id=\"newPostForm\">\r\n                  <FormGroup>\r\n                    <Label><strong>Name of Product: </strong></Label>\r\n                    <Input value={productName}\r\n                      onChange={(word) => {\r\n                        productName = (word.target.value);\r\n                      }}\r\n                    />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <br />\r\n                    <Label><strong>Description of Product: </strong></Label>\r\n                    <Input className=\"descriptionText\" value={description}\r\n                      onChange={(des) => {\r\n                        description = (des.target.value);\r\n                      }}\r\n                    />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <br />\r\n                    <Label><strong>Type (Example: Furniture, Cloth): </strong></Label>\r\n                    <select name=\"productType\" id=\"productType\">\r\n                      <option value=\"1\" selected disabled>Please select a type</option>\r\n                      <option value=\"Furniture\">Furniture</option>\r\n                      <option value=\"Clothes\">Clothes</option>\r\n                      <option value=\"Food\">Food</option>\r\n                      <option value=\"Other\">Other</option>\r\n                    </select>\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <br />\r\n                    <CustomInput type=\"file\" id=\"productImage\" accept=\"image/jpg,image/jpeg,image/png\" />\r\n                  </FormGroup>\r\n                </Form>\r\n              </div>\r\n              <div className=\"actions\">\r\n\r\n                {/* This posts the input data into the backend */}\r\n                <button\r\n                  className=\"button\"\r\n                  onClick={() => {\r\n                    if (productName.length > 0 && description.length > 0) {\r\n                      var productImage = document.getElementById(\"productImage\");\r\n                      var form = new FormData();\r\n                      form.append(\"imageFile\", productImage.files[0]);\r\n                      form.append(\"name\", productName);\r\n                      form.append(\"description\", description);\r\n                      form.append(\"productType\", document.getElementById(\"productType\").value);\r\n                      form.append(\"owner\", currentProfileEmail);\r\n                      console.log(form.getAll(\"name\"), form.getAll(\"imageFile\"));\r\n                      axios.post(\"/api/postProduct\", form, { headers: { 'content-type': \"multipart/form-data\" } })\r\n                        .then((result) => {\r\n                          if (result.data.success) {\r\n                            alert(\"Successfully Posted\");\r\n                            window.location.reload(); // reloads page to render proper buttons on navbar\r\n                          } else {\r\n                            alert(\"Post Failure Occurred\");\r\n                          }\r\n                        })\r\n                    }\r\n                  }}\r\n                >\r\n                  SUBMIT\r\n                    </button>\r\n              </div>\r\n              <button className=\"button\"\r\n                onClick={() => {\r\n\r\n                }}\r\n              >\r\n                Trouble Posting?\r\n                    </button>\r\n            </div>\r\n          )}\r\n        </Popup>\r\n      )\r\n    }\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state);\r\n    let userImage;\r\n\r\n    if (this.state.user.userImage != null) {\r\n      if (this.state.user.userImage.localeCompare(\"undefined\") == 0) userImage = user;\r\n      else userImage = this.state.user.userImage;\r\n    }\r\n    else {\r\n      userImage = user;\r\n    }\r\n\r\n    return (\r\n      // <div className=\"profile\">\r\n      //   <div className=\"topSection\">\r\n      //     <div className=\"topLeft\">\r\n\r\n      //       {/* Users profile picture */}\r\n      //       <div className=\"userImage\">\r\n      //         <img src={userImage} alt=\"\" />\r\n      //       </div>\r\n\r\n      //       {/* User's username and rating */}\r\n            // <div className=\"userName\">\r\n            //   <h1>{this.state.user.name}</h1>\r\n            //   <h2>{this.state.user.email}</h2>\r\n            //   <h2>Location: {this.state.user.zipcode}</h2>\r\n            // </div>\r\n\r\n      //       {/* Report button */}\r\n      //       {/* <Report /> */}\r\n      //     </div>\r\n      //     <div className=\"topRight\">\r\n\r\n      //     </div>\r\n      //   </div>\r\n      //   <div className=\"bottomSection\">\r\n          // {/* Edit user profile */}\r\n          // {this.editUserProfile()}\r\n          // {/* This is a pop up for creating a new post */}\r\n          // {this.createPost()}\r\n\r\n          // {/* These are lists of the items and fundraisers a user has posted */}\r\n          // <h2>ITEMS POSTED</h2>\r\n          // <div className=\"scrollmenu\">\r\n          //   {this.state.items.sort().reverse().map(item => <Card id={item.id} name={item.name} description={item.description} productImage={item.productImage} />)}\r\n          // </div>\r\n          // <h2>FUNDRAISERS POSTED</h2>\r\n          // <div className=\"scrollmenu\">\r\n          // {this.state.funds.sort().reverse().map(item =>\r\n          //   <FundraiserCard id={item.id} title={item.title} description={item.description} image={item.image} endorsement={item.endorsement} requiredAmount={item.requiredAmount} />\r\n          // )}\r\n          // </div>\r\n      //   </div>\r\n      //   {/* This is a pop up for deleting the profile */}\r\n      //   {this.deleteUserProfile()}\r\n      // </div>\r\n\r\n      <div className=\"h-75 x-1\">\r\n        <Grid container spacing={3}>\r\n          {/* top banner */}\r\n          <Grid container spacing={3} md={12} className=\"pfBanner\">\r\n            {/* image */}\r\n            <Grid item xs={12} sm={3}>\r\n              <img className=\"w-100\" src={userImage} alt=\"\" />\r\n            </Grid>\r\n            {/* name and info */}\r\n            <Grid item xs={12} sm={9}>\r\n              <div className=\"userName\">\r\n                <h2>{this.state.user.name}</h2> \r\n                {/* Edit user profile */}\r\n                {this.editUserProfile()}\r\n                {/* This is a pop up for deleting the profile */}\r\n                {this.deleteUserProfile()}\r\n                <h3>{this.state.user.email}</h3>\r\n                <h3>Location: {this.state.user.zipcode}</h3>\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n            {/* everything else (posts) */}\r\n            <Grid item xs={12} p={3}>\r\n              {/* This is a pop up for creating a new post */}\r\n              {this.createPost()}\r\n\r\n              {/* These are lists of the items and fundraisers a user has posted */}\r\n              <h2>ITEMS POSTED</h2>\r\n              <div className=\"scrollmenu\">\r\n                {this.state.items.sort().reverse().map(item => <Card id={item.id} name={item.name} description={item.description} productImage={item.productImage} />)}\r\n              </div>\r\n              <h2>FUNDRAISERS POSTED</h2>\r\n              <div className=\"scrollmenu\">\r\n                {this.state.funds.sort().reverse().map(item =>\r\n                  <FundraiserCard id={item.id} title={item.title} description={item.description} image={item.image} endorsement={item.endorsement} requiredAmount={item.requiredAmount} />\r\n                )}\r\n              </div>\r\n            </Grid>\r\n        </Grid>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default User;","const axios = require('axios');\r\nconst currentUser = require('./currentUser.js');\r\n\r\nconst deleteProductsFunction = function (id) {\r\n    console.log(id);\r\n\r\n    let pageRedirect = false;\r\n    let searchable = {};\r\n    searchable[\"id\"] = id; // login searches registered user database by email\r\n\r\n    if (document.forms.deleteUserForm.response.value.localeCompare(\"YES\") === 0) {\r\n        console.log(\"DELETE\");\r\n        axios.post(\"/api/deleteProduct\", searchable)\r\n            .then((result) => {\r\n                if (result.data.success) {\r\n                    alert(\"Successfully Deleted\");\r\n                } else {\r\n                    alert(\"Post Failure Occurred\");\r\n                }\r\n            })\r\n\r\n        // route to homepage and refresh navbar\r\n        pageRedirect = true;\r\n    }\r\n    else {\r\n        console.log(\"DON'T DELETE\");\r\n        alert(\"Post not deleted\");\r\n        pageRedirect = false;\r\n    }\r\n\r\n    return pageRedirect;\r\n}\r\n\r\nexport default deleteProductsFunction;","const axios = require('axios');\r\n\r\nconst editPost = function(item) {\r\n    let form = new FormData();\r\n    let name;\r\n    let description;\r\n    let productType;\r\n    let productImage;\r\n\r\n    // checks if form is empty\r\n    if(!document.forms.editUserForm.name.value && \r\n        !document.forms.editUserForm.description.value &&\r\n        !document.forms.editUserForm.productType.value &&\r\n        !document.forms.editUserForm.newProfileImage.value)\r\n    {\r\n        alert(\"Fields cannot be empty!\");\r\n        return;\r\n    }\r\n\r\n    // checks if there is new data for user\r\n    if(!document.forms.editUserForm.name.value) name = item.name;\r\n    else name = document.forms.editUserForm.name.value;\r\n\r\n    if(!document.forms.editUserForm.description.value) description = item.description;\r\n    else description = document.forms.editUserForm.description.value;\r\n\r\n    if(document.forms.editUserForm.productType.value.localeCompare(\"default\") == 0) productType = item.productType;\r\n    else productType = document.forms.editUserForm.productType.value;\r\n\r\n    if(!document.forms.editUserForm.productImage.value) \r\n    {\r\n        // uses current profile picture if no new pciture is uploaded\r\n        productImage = item.productImage; // string\r\n        form.append(\"imageFile\", productImage);\r\n    }\r\n    else \r\n    {\r\n        productImage = document.forms.editUserForm.productImage; // object\r\n        form.append(\"imageFile\", productImage.files[0]);\r\n    }\r\n\r\n    form.append(\"name\", name);\r\n    form.append(\"description\", description);\r\n    form.append(\"productType\", productType);\r\n    form.append(\"owner\", item.owner);\r\n    form.append(\"id\", item.id)\r\n    console.log(form.getAll(\"id\"), form.getAll(\"name\"), form.getAll(\"description\"), form.getAll(\"productType\"), form.getAll(\"imageFile\"), form.getAll(\"owner\"));\r\n\r\n    //calls api to edit post to database\r\n    axios.post(\"/api/editPost\", form, { headers: { 'content-type': \"multipart/form-data\"}})\r\n    .then((result) => {\r\n        if(result.data.success){\r\n            alert(\"Post Updated Successfully\");\r\n            window.location.reload();\r\n        }else{\r\n            alert(\"Post Update Failed\");\r\n        }\r\n    })\r\n}\r\n\r\nexport default editPost;","import React, { Component } from 'react';\r\nimport './css/Posts.css';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FavoriteBorder from \"@material-ui/icons/FavoriteBorder\";\r\nimport axios from 'axios';\r\n\r\nimport Popup from 'reactjs-popup';\r\nimport currentUser from './backend/currentUser.js';\r\nimport deleteProductsFunction from './backend/deleteProduct.js';\r\nimport editPost from './backend/editPost.js';\r\n\r\n/*\r\n**  ProductPost.js\r\n**\r\n**  This page is for the details of any singular item from backend\r\n*/\r\nclass ProductPost extends Component {\r\n  state = {\r\n    items: [], // saves entire list of products from database\r\n    item: {},  // saves a single product hich will be displayed\r\n    owner: {} // saves the owner of the product\r\n  }\r\n\r\n  componentDidMount() {\r\n    // calls api to get list of all products from database\r\n    axios.get(`/api`)\r\n      .then(res => {\r\n        const items = res.data;\r\n        this.setState({ items }); // sets the array with all database items\r\n\r\n        let pageName = this.props.match.params.id; // gets the url parameter\r\n        let singleProduct;\r\n        if (this.state.item !== undefined) {\r\n          // sets the variable to the found product. Product is found by comparing all product names to the url paramter\r\n          singleProduct = this.state.items.find((product) => { return product.id == pageName })\r\n\r\n          // add logic to find owner of product from users table\r\n          // similar code to searching api\r\n          let user;\r\n          let searchable = {};\r\n          searchable[\"searchEmail\"] = singleProduct.owner; // login searches registered user database by email\r\n          axios.post('/api/loginUser', searchable)\r\n            .then((result) => {\r\n              if (!result.data.success) {\r\n                alert(\"Failed Search\");\r\n              }\r\n              else {\r\n                user = result.data.users[0]; // returns the data from the database\r\n                this.setState({ owner: user });\r\n              }\r\n            })\r\n\r\n        }\r\n        this.setState({ item: singleProduct }); // sets the state of the single product variable with the found product\r\n      })\r\n  }\r\n\r\n  deletePost() {\r\n    console.log(this.props);\r\n    let currentUserEmail = currentUser.getUser().email;\r\n    let currentProfileEmail = this.state.owner.email;\r\n\r\n    if ((currentUserEmail.localeCompare(\"admin@admin.com\") === 0) || (currentUserEmail.localeCompare(currentProfileEmail) === 0)) // edit profile if current user is profile owner or an admin\r\n    {\r\n      return (\r\n        <Popup\r\n          contentStyle={{width: \"auto\"}}\r\n          trigger={<button className=\"postButton\"> Delete Post </button>}\r\n          modal\r\n          nested\r\n        >\r\n          {close => (\r\n            <div className=\"popup\">\r\n              <button className=\"close\" onClick={close}>\r\n                &times;\r\n            </button>\r\n              <div className=\"header\"> <strong> Delete Post </strong></div>\r\n              <div className=\"header\"> <strong> This Action Cannot Be Undone </strong></div>\r\n              <div className=\"content\">\r\n                <form id=\"deleteUserForm\" method=\"post\">\r\n                  <label><strong>Type \"YES\" to Confirm Deletion </strong></label>\r\n                  <input type=\"text\" name=\"response\" placeholder=\"YES\" />\r\n                  <br />\r\n                </form>\r\n              </div>\r\n              <div className=\"actions\">\r\n                <button\r\n                  className=\"button\"\r\n                  onClick={() => {\r\n                    let pageRedirect = deleteProductsFunction(this.props.match.params.id);\r\n\r\n                    if (pageRedirect) {\r\n                      console.log(\"HERE\");\r\n                      window.location.replace('/');\r\n                      //history.push('/');\r\n                    }\r\n                  }}\r\n                >DELETE\r\n              </button>\r\n              </div>\r\n\r\n            </div>\r\n          )}\r\n        </Popup>\r\n      )\r\n    }\r\n  }\r\n\r\n  editPost() {\r\n    let currentUserEmail = currentUser.getUser().email;\r\n    let currentProfileEmail = this.state.owner.email;\r\n\r\n    if ((currentUserEmail.localeCompare(\"admin@admin.com\") === 0) || (currentUserEmail.localeCompare(currentProfileEmail) === 0)) // edit profile if current user is profile owner or an admin\r\n    {\r\n      return (\r\n        <Popup\r\n          contentStyle={{width: \"auto\"}}\r\n          trigger={<button className=\"postButton\"> Edit Post </button>}\r\n          modal\r\n          nested\r\n        >\r\n          {close => (\r\n            <div className=\"popup\">\r\n              <button className=\"close\" onClick={close}>\r\n                &times;\r\n            </button>\r\n              <div className=\"header\"> <strong> Edit Post </strong></div>\r\n              <div className=\"content\">\r\n                <form id=\"editUserForm\" method=\"post\">\r\n                  <label><strong>Title: </strong></label>\r\n                  <input type=\"text\" name=\"name\" placeholder={this.state.item.name} />\r\n\r\n                  <br />\r\n                  <label><strong>Description: </strong></label>\r\n                  <input type=\"text\" name=\"description\" placeholder={this.state.item.description} />\r\n\r\n                  <br />\r\n                  <label><strong>Type: </strong></label>\r\n                  <select name=\"productType\" id=\"productType\">\r\n                    <option value=\"default\" selected disabled>Please select a type</option>\r\n                    <option value=\"Furniture\">Furniture</option>\r\n                    <option value=\"Clothes\">Clothes</option>\r\n                    <option value=\"Food\">Food</option>\r\n                    <option value=\"Other\">Other</option>\r\n                  </select>\r\n\r\n                  <br />\r\n                  <label><strong>New Post Image: </strong></label>\r\n                  <input type=\"file\" id=\"productImage\" accept=\"image/jpg,image/jpeg,image/png\" />\r\n                </form>\r\n              </div>\r\n              <div className=\"actions\">\r\n\r\n                {/* This posts the input data into the backend */}\r\n                <button\r\n                  className=\"button\"\r\n                  onClick={() => { editPost(this.state.item) }}\r\n                >SUBMIT\r\n              </button>\r\n              </div>\r\n\r\n            </div>\r\n          )}\r\n        </Popup>\r\n      )\r\n    }\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state);\r\n    const productItem = this.state.item;\r\n    const productOwner = this.state.owner;\r\n\r\n    return (\r\n      <div className=\"h-75 x-1 body\">\r\n        <Grid container spacing={3}>\r\n          {/* image column */}\r\n          <Grid item xs={12} sm={5}>\r\n            <img className=\"w-100 border border-light\" src={productItem.productImage} onError={(e) => {\r\n              e.target.src = '../images/charity.png' // fallback image\r\n            }} alt=\"\" />\r\n          </Grid>\r\n          {/* Description column */}\r\n          <Grid item xs={12} sm={7} container spacing={3} className=\"px-5\">\r\n            <Grid xs={12} sm={12} container spacing={3}>\r\n              <Grid xs={12} sm={6}>\r\n                <h1>{productItem.name}</h1>\r\n                <div className=\"rating\">\r\n                  <FavoriteBorder className=\"star\"/>\r\n                  <p>\r\n                    {/* <strong>{likes}</strong> */}\r\n                  </p>\r\n                </div>\r\n              </Grid>\r\n              <Grid xs={12} sm={6}>\r\n                {this.deletePost()}\r\n                {this.editPost()}\r\n              </Grid>\r\n            </Grid>\r\n            <div className=\"productTitle\">\r\n              <h4>{productOwner.name}</h4>\r\n              <h4>Location: {productOwner.zipcode}</h4>\r\n              <h4>Contact: {productOwner.email}</h4>\r\n              <h4>Category: {productItem.productType}</h4>\r\n              <h5>{productItem.description}</h5>\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default ProductPost;","const axios = require('axios');\r\nconst currentUser = require('./currentUser.js');\r\n\r\nconst deleteFundFunction = function (id) {\r\n    console.log(id);\r\n\r\n    let pageRedirect = false;\r\n    let searchable = {};\r\n    searchable[\"id\"] = id; // login searches registered user database by email\r\n\r\n    if (document.forms.deleteUserForm.response.value.localeCompare(\"YES\") === 0) {\r\n        console.log(\"DELETE\");\r\n        axios.post(\"/api/deleteFundraiser\", searchable)\r\n            .then((result) => {\r\n                if (result.data.success) {\r\n                    alert(\"Successfully Deleted\");\r\n                } else {\r\n                    alert(\"Post Failure Occurred\");\r\n                }\r\n            })\r\n\r\n        // route to homepage and refresh navbar\r\n        pageRedirect = true;\r\n    }\r\n    else {\r\n        console.log(\"DON'T DELETE\");\r\n        alert(\"Post not deleted\");\r\n        pageRedirect = false;\r\n    }\r\n\r\n    return pageRedirect;\r\n}\r\n\r\nexport default deleteFundFunction;","const axios = require('axios');\r\n\r\nconst editFund= function(item) {\r\n    let form = new FormData();\r\n    let title;\r\n    let description;\r\n    let fundType;\r\n    let requiredAmount;\r\n    let image;\r\n\r\n    // checks if form is empty\r\n    if(!document.forms.editUserForm.name.value && \r\n        !document.forms.editUserForm.description.value &&\r\n        !document.forms.editUserForm.productType.value &&\r\n        !document.forms.editUserForm.requiredAmount.value &&\r\n        !document.forms.editUserForm.newProfileImage.value)\r\n    {\r\n        alert(\"Fields cannot be empty!\");\r\n        return;\r\n    }\r\n\r\n    // checks if there is new data for user\r\n    if(!document.forms.editUserForm.name.value) title = item.title;\r\n    else title = document.forms.editUserForm.name.value;\r\n\r\n    if(!document.forms.editUserForm.description.value) description = item.description;\r\n    else description = document.forms.editUserForm.description.value;\r\n\r\n    if(document.forms.editUserForm.productType.value.localeCompare(\"default\") == 0) fundType = item.fundType;\r\n    else fundType = document.forms.editUserForm.productType.value;\r\n\r\n    if(!document.forms.editUserForm.requiredAmount.value) requiredAmount = item.requiredAmount;\r\n    else requiredAmount = document.forms.editUserForm.requiredAmount.value;\r\n\r\n    if(!document.forms.editUserForm.productImage.value) \r\n    {\r\n        // uses current profile picture if no new pciture is uploaded\r\n        image = item.image; // string\r\n        form.append(\"imageFile\", image);\r\n    }\r\n    else \r\n    {\r\n        image = document.forms.editUserForm.productImage; // object\r\n        form.append(\"imageFile\", image.files[0]);\r\n    }\r\n\r\n    form.append(\"title\", title);\r\n    form.append(\"description\", description);\r\n    form.append(\"fundType\", fundType);\r\n    form.append(\"owner\", item.owner);\r\n    form.append(\"id\", item.id)\r\n    form.append(\"requiredAmount\", requiredAmount);\r\n    form.append(\"endorsement\", item.endorsement);\r\n    console.log(form.getAll(\"id\"), form.getAll(\"title\"), form.getAll(\"description\"), form.getAll(\"fundType\"), form.getAll(\"requiredAmount\"), form.getAll(\"imageFile\"), form.getAll(\"endorsement\"), form.getAll(\"owner\"));\r\n\r\n    // calls api to edit post to database\r\n    axios.post(\"/api/editFundraiser\", form, { headers: { 'content-type': \"multipart/form-data\"}})\r\n    .then((result) => {\r\n        if(result.data.success){\r\n            alert(\"Post Updated Successfully\");\r\n            window.location.reload();\r\n        }else{\r\n            alert(\"Post Update Failed\");\r\n        }\r\n    })\r\n}\r\n\r\nexport default editFund;","import React, { Component } from 'react';\r\nimport './css/FundraiserPost.css';\r\nimport Star from \"@material-ui/icons/Star\";\r\nimport axios from 'axios';\r\nimport currentUser from './backend/currentUser.js';\r\nimport Popup from 'reactjs-popup';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nimport FileCopyOutlinedIcon from '@material-ui/icons/FileCopyOutlined';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport deleteFundFunction from './backend/deleteFund.js';\r\nimport editFund from './backend/editFund.js';\r\n\r\n/*\r\n**  FundraiserPost.js\r\n**\r\n**  This page is for the details of any singular fundraiser from backend\r\n*/\r\nclass FundraiserPost extends Component {\r\n  state = {\r\n    items: [], // saves entire list of products from database\r\n    item: {},  // saves a single product which will be displayed\r\n    owner: {}, // saves the owner of the product\r\n    random: 0, // stores random raised amount\r\n    value: '',\r\n    copied: false\r\n  }\r\n\r\n  componentDidMount() {\r\n    // calls api to get list of all products from database\r\n    axios.get(`/api/Fundraisers`)\r\n      .then(res => {\r\n        const items = res.data;\r\n        this.setState({ items }); // sets the array with all database items\r\n\r\n\r\n        let pageName = this.props.match.params.id; // gets the url parameter\r\n        let singleFund;\r\n        if (this.state.item !== undefined) {\r\n          // sets the variable to the found product. Product is found by comparing all product names to the url paramter\r\n          singleFund = this.state.items.find((fund) => { return fund.id == pageName })\r\n\r\n          // add logic to find owner of product from users table\r\n          // similar code to searching api\r\n          let user;\r\n          let searchable = {};\r\n          searchable[\"searchEmail\"] = singleFund.owner; // login searches registered user database by email\r\n          axios.post('/api/loginUser', searchable)\r\n            .then((result) => {\r\n              if (!result.data.success) {\r\n                alert(\"Failed Search\");\r\n              }\r\n              else {\r\n                user = result.data.users[0]; // returns the data from the database\r\n                this.setState({ owner: user });\r\n              }\r\n            })\r\n\r\n        }\r\n        this.setState({ item: singleFund }); // sets the state of the single product variable with the found product\r\n\r\n        // generates a random raised amount\r\n        let min = 0;\r\n        let max = this.state.item.requiredAmount;\r\n        let rand = parseInt(min + (Math.random() * (max - min)));\r\n        this.setState({ random: this.state.random + rand });\r\n        //\r\n      })\r\n  }\r\n\r\n  endorsePost(fundraiserItem) {\r\n    let tempUserEmail = \"noemail@email.com\";\r\n\r\n    if (tempUserEmail.localeCompare(currentUser.getUser().email) !== 0) // checks if there is a current user\r\n    {\r\n      return (\r\n        <button className=\"postButton\" onClick={() => {\r\n          let searchable = {};\r\n          searchable[\"endorsement\"] = fundraiserItem.endorsement + 1; // login searches registered user database by email\r\n          searchable[\"id\"] = fundraiserItem.id;\r\n          axios.post('/api/updateEndorsement', searchable)\r\n            .then((result) => {\r\n              if (!result.data.success) {\r\n                alert(\"Failed Search\");\r\n              }\r\n              else {\r\n                window.location.reload();\r\n              }\r\n            })\r\n        }}> Endorse </button>\r\n      )\r\n    }\r\n  }\r\n\r\n  deletePost() {\r\n    console.log(this.props);\r\n    let currentUserEmail = currentUser.getUser().email;\r\n    let currentProfileEmail = this.state.owner.email;\r\n\r\n    if ((currentUserEmail.localeCompare(\"admin@admin.com\") === 0) || (currentUserEmail.localeCompare(currentProfileEmail) === 0)) // edit profile if current user is profile owner or an admin\r\n    {\r\n      return (\r\n        <Popup\r\n          trigger={<button className=\"postButton\"> Delete Post </button>}\r\n          modal\r\n          nested\r\n        >\r\n          {close => (\r\n            <div className=\"popup\">\r\n              <button className=\"close\" onClick={close}>\r\n                &times;\r\n            </button>\r\n              <div className=\"header\"> <strong> Delete Post </strong></div>\r\n              <div className=\"header\"> <strong> This Action Cannot Be Undone </strong></div>\r\n              <div className=\"content\">\r\n                <form id=\"deleteUserForm\" method=\"post\">\r\n                  <label><strong>Type \"YES\" to Confirm Deletion </strong></label>\r\n                  <input type=\"text\" name=\"response\" placeholder=\"YES\" />\r\n                  <br />\r\n                </form>\r\n              </div>\r\n              <div className=\"actions\">\r\n                <button\r\n                  className=\"button\"\r\n                  onClick={() => {\r\n                    let pageRedirect = deleteFundFunction(this.props.match.params.id);\r\n\r\n                    if (pageRedirect) {\r\n                      console.log(\"HERE\");\r\n                      window.location.replace('/');\r\n                      //history.push('/');\r\n                    }\r\n                  }}\r\n                >DELETE\r\n              </button>\r\n              </div>\r\n\r\n            </div>\r\n          )}\r\n        </Popup>\r\n      )\r\n    }\r\n  }\r\n\r\n  editPost() {\r\n    let currentUserEmail = currentUser.getUser().email;\r\n    let currentProfileEmail = this.state.owner.email;\r\n\r\n    if ((currentUserEmail.localeCompare(\"admin@admin.com\") === 0) || (currentUserEmail.localeCompare(currentProfileEmail) === 0)) // edit profile if current user is profile owner or an admin\r\n    {\r\n      return (\r\n        <Popup\r\n          trigger={<button className=\"postButton\"> Edit Post </button>}\r\n          modal\r\n          nested\r\n        >\r\n          {close => (\r\n            <div className=\"popup\">\r\n              <button className=\"close\" onClick={close}>\r\n                &times;\r\n            </button>\r\n              <div className=\"header\"> <strong> Edit Post </strong></div>\r\n              <div className=\"content\">\r\n                <form id=\"editUserForm\" method=\"post\">\r\n                  <label><strong>Title: </strong></label>\r\n                  <input type=\"text\" name=\"name\" placeholder={this.state.item.title} />\r\n\r\n                  <br />\r\n                  <label><strong>Description: </strong></label>\r\n                  <input type=\"text\" name=\"description\" placeholder={this.state.item.description} />\r\n\r\n                  <br />\r\n                  <label><strong>Type: </strong></label>\r\n                  <select name=\"productType\" id=\"productType\">\r\n                    <option value=\"default\" selected disabled>Please select a type</option>\r\n                    <option value=\"Medical\">Medical</option>\r\n                    <option value=\"Education\">Education</option>\r\n                    <option value=\"Community\">Community</option>\r\n                    <option value=\"Other\">Other</option>\r\n                  </select>\r\n\r\n                  <br />\r\n                  <label><strong>Amount Required in USD: </strong></label>\r\n                  <input type=\"number\" name=\"requiredAmount\" placeholder={this.state.item.requiredAmount} />\r\n\r\n                  <br />\r\n                  <label><strong>New Post Image: </strong></label>\r\n                  <input type=\"file\" id=\"productImage\" accept=\"image/jpg,image/jpeg,image/png\" />\r\n                </form>\r\n              </div>\r\n              <div className=\"actions\">\r\n\r\n                {/* This posts the input data into the backend */}\r\n                <button\r\n                  className=\"button\"\r\n                  onClick={() => { editFund(this.state.item) }}\r\n                >SUBMIT\r\n              </button>\r\n              </div>\r\n\r\n            </div>\r\n          )}\r\n        </Popup>\r\n      )\r\n    }\r\n  }\r\n\r\n  copyText() {\r\n    return (\r\n      <div>\r\n        <CopyToClipboard text={this.state.owner.email}\r\n          onCopy={() => this.setState({ copied: true })}>\r\n          <button className=\"postButton\">Copy Email</button>\r\n        </CopyToClipboard>\r\n\r\n        {this.state.copied ? <span style={{ color: 'red' }}> Copied Email to Clipboard</span> : null}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  donateButton() {\r\n    return (\r\n      <Popup\r\n        trigger={<button className=\"postButton\"> Donate Now </button>}\r\n        modal\r\n        nested\r\n      >\r\n        {close => (\r\n          <div className=\"popup\">\r\n            <button className=\"close\" onClick={close}>\r\n              &times;\r\n            </button>\r\n            <div className=\"header\"> <strong> Choose a service </strong></div>\r\n            <div className=\"content\">\r\n              {this.copyText()}\r\n              <div>\r\n                <a href=\"https://www.paypal.com/us/home\">\r\n                  <img alt=\"PayPal\" src=\"https://miro.medium.com/max/4000/1*SaXNDepA2B9V5pFiof1Q3A.png\" width=\"60%\" height=\"60%\"></img>\r\n                </a>\r\n              </div>\r\n              <div>\r\n                <a href=\"https://venmo.com/\">\r\n                  <img alt=\"Venmo\" src=\"https://www.breakwaterfinancial.com/sites/default/files/users/aberinger/Venmo.png\" width=\"60%\" height=\"60%\"></img>\r\n                </a>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        )}\r\n      </Popup>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    let fundraiserItem = this.state.item;\r\n    let productOwner = this.state.owner;\r\n\r\n    let receviedDonations = this.state.random; // random value\r\n\r\n    // code to update progress bar\r\n    if (document.getElementById(\"myBar\") !== null) {\r\n      let elem = document.getElementById(\"myBar\");\r\n      let width = parseInt((receviedDonations / fundraiserItem.requiredAmount) * 100); // percentage\r\n      elem.style.width = width + \"%\";\r\n      elem.innerHTML = width + \"%\";\r\n    }\r\n    //\r\n\r\n    return (\r\n      <div className=\"h-75 x-1 body\">\r\n        <Grid container spacing={3}>\r\n          {/* image column */}\r\n          <Grid item xs={12} sm={5}>\r\n            <img className=\"w-100 border border-light\" src={fundraiserItem.image} onError={(e) => {\r\n              e.target.src = '../images/charity.png' // fallback image\r\n            }} alt=\"\" />\r\n          </Grid>\r\n          {/* Description column */}\r\n          <Grid item xs={12} sm={7} container spacing={3} className=\"px-5\">\r\n            <Grid xs={12} sm={12} container spacing={3}>\r\n              <Grid xs={12} sm={6}>\r\n                <div className=\"rating\">\r\n                  <p>\r\n                    <Star className=\"star\" />\r\n                    <strong>{fundraiserItem.endorsement}</strong>\r\n                    {this.endorsePost(fundraiserItem)}\r\n                  </p>\r\n                  <div className=\"amountRequired\">\r\n                    <h3>${receviedDonations} out of ${fundraiserItem.requiredAmount} raised.</h3>\r\n                    <div id=\"myProgress\">\r\n                      <div id=\"myBar\"></div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Grid>\r\n              <Grid xs={12} sm={6}>\r\n                {this.deletePost()}\r\n                {this.editPost()}\r\n              </Grid>\r\n            </Grid>\r\n            <div className=\"productTitle\">\r\n              <h4>{productOwner.name}</h4>\r\n              <h4>Location: {productOwner.zipcode}</h4>\r\n              <h4>Contact: {productOwner.email}</h4>\r\n              <h4>Category: {fundraiserItem.fundType}</h4>\r\n              <h5>{fundraiserItem.description}</h5>\r\n              <div className=\"donateButton\">\r\n                {this.donateButton()}\r\n              </div>\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default FundraiserPost;","import React, { Component } from 'react';\r\nimport Card from './Card.js';\r\nimport FundraiserCard from './FundraiserCard.js';\r\nimport './css/searchResult.css';\r\nimport axios from 'axios';\r\n\r\n/*\r\n**  searchResult.js\r\n**\r\n**  This page is a temporary fill in for the browsing pages in order to get items with the same name as the\r\n**  input keywords\r\n*/\r\nexport class searchResult extends Component {\r\n    state = {\r\n        items: [],\r\n        fundraisers: [],\r\n        searchTable: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        let keySearch = this.props.match.params.term;\r\n\r\n        if (keySearch) {\r\n            let searchable = {};\r\n            console.log(keySearch)\r\n            searchable[\"searchItem\"] = keySearch;\r\n            axios.post(\"/api/makeSearch\", searchable)\r\n                .then((result) => {\r\n                    if (!result.data.success) {\r\n                        alert(\"Failed Search\");\r\n                    } else {\r\n                        const items = result.data.products;\r\n                        console.log(items);\r\n                        this.setState({ items: items });\r\n                        this.setState({ searchTable: this.props.match.params.table });\r\n                    }\r\n                })\r\n                .catch(exception => {\r\n                    alert(\"Failed Search\");\r\n                })\r\n            axios.post(\"/api/makeFundSearch\", searchable)\r\n                .then((result) => {\r\n                    if (!result.data.success) {\r\n                        alert(\"Failed Search\");\r\n                    } else {\r\n                        const fundraisers = result.data.fundraisers;\r\n                        console.log(fundraisers);\r\n                        this.setState({ fundraisers: fundraisers });\r\n                        this.setState({ searchTable: this.props.match.params.table });\r\n                    }\r\n                })\r\n                .catch(exception => {\r\n                    alert(\"Failed Search\");\r\n                })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state);\r\n\r\n        let searchTable = this.state.searchTable;\r\n\r\n        if (searchTable.localeCompare(\"products\") === 0) {\r\n            return (\r\n                <div>\r\n                    <div>\r\n                        <h1> SEARCH RESULTS</h1>\r\n                    </div>\r\n                    <div className=\"items\">\r\n                        {this.state.items.sort().reverse().map(item =>\r\n                            <Card id={item.id} name={item.name} description={item.description} productImage={item.productImage} />\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        else if (searchTable.localeCompare(\"fundraisers\") === 0) {\r\n            return (\r\n                <div>\r\n                    <div>\r\n                        <h1> SEARCH RESULTS</h1>\r\n                    </div>\r\n                    <div className=\"items\">\r\n                        {this.state.fundraisers.sort().reverse().map(item =>\r\n                            <FundraiserCard id={item.id} title={item.title} description={item.description} image={item.image} endorsement={item.endorsement} requiredAmount={item.requiredAmount} />\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        else {\r\n            return (\r\n                <div>\r\n                    <div>\r\n                        <h1> SEARCH RESULTS</h1>\r\n                        <h1>WRONG SEARCH PARAMETER</h1>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default searchResult\r\n","import React, { Component } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport './css/Chat.css';\r\n\r\nclass Chat extends Component {\r\n    scrollToBottom = () => {\r\n        this.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n\r\n    openList() {\r\n        document.getElementById(\"userList\").style.display = \"block\";\r\n    }\r\n      \r\n    closeList() {\r\n        document.getElementById(\"userList\").style.display = \"none\";\r\n    }\r\n\r\n    openChat() {\r\n        document.getElementById(\"chat\").style.display = \"block\";\r\n    }\r\n      \r\n    closeChat() {\r\n        document.getElementById(\"chat\").style.display = \"none\";\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.scrollToBottom();\r\n    }\r\n      \r\n    componentDidUpdate() {\r\n        this.scrollToBottom();\r\n    }\r\n  \r\n    render() {\r\n        const DUMMY_DATA = [\r\n            { sender: \"perborgen\",\r\n            messages: [ \r\n            {\r\n              senderId: \"perborgen\",\r\n              text: \"who'll win?\",\r\n              user: false,\r\n            },\r\n            {\r\n              senderId: \"janedoe\",\r\n              text: \"It's gonna be me of course.\",\r\n              user: true,\r\n            },\r\n            {\r\n                senderId: \"perborgen\",\r\n                text: \"lorem ipsum\",\r\n                user: false,\r\n            },\r\n            {\r\n                senderId: \"janedoe\",\r\n                text: \"dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\",\r\n                user: true,\r\n            },\r\n            {\r\n                senderId: \"perborgen\",\r\n                text: \"Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\",\r\n                user: false,\r\n            },\r\n            {\r\n                senderId: \"janedoe\",\r\n                text: \"Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\",\r\n                user: true,\r\n            }\r\n            ]},\r\n            { sender: \"n\",\r\n            messages: [\r\n            {\r\n                senderId: \"n\",\r\n                text: \"lorem ipsum\",\r\n                user: false,\r\n            },\r\n            {\r\n                senderId: \"janedoe\",\r\n                text: \"dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\",\r\n                user: true,\r\n            },\r\n            {\r\n                senderId: \"n\",\r\n                text: \"Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\",\r\n                user: false,\r\n            },\r\n            {\r\n                senderId: \"janedoe\",\r\n                text: \"Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\",\r\n                user: true,\r\n            }\r\n            ]},\r\n        ]\r\n\r\n      return (\r\n        <div>\r\n            {/* chat */}\r\n            <div className=\"chat\" id=\"chat\">\r\n                <form className=\"container\">\r\n                    <Grid container>\r\n                    <Grid item xs={12}>\r\n                    <ul>  \r\n                    {DUMMY_DATA.map(DUMMY_DATA => {\r\n                        return (\r\n                            <li key={DUMMY_DATA.id}> {/*className={`${DUMMY_DATA.user ? \"right\" : \"\"}`}>*/}\r\n                                <div>\r\n                                    {/* <b>{DUMMY_DATA.senderId}: </b> */}\r\n                                    <b>{DUMMY_DATA.user ? \"me\" : DUMMY_DATA.senderId}: </b>\r\n                                    {DUMMY_DATA.text}\r\n                                </div>\r\n                            </li>\r\n                        )\r\n                    })} \r\n                    <div style={{ float:\"left\", clear: \"both\" }}\r\n                        ref={(el) => { this.messagesEnd = el; }}>\r\n                    </div>             \r\n                    </ul>\r\n                    </Grid>\r\n                    <Grid item>\r\n                    <textarea placeholder=\"Type message..\" name=\"msg\" required></textarea>\r\n\r\n                    <button type=\"button\" className=\"btn\">Send</button>\r\n                    <button type=\"button\" className=\"btn cancel\" onClick={this.closeChat}>Close</button>\r\n                    </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n        </div>\r\n      )\r\n    }\r\n}\r\nexport default Chat;","import React, { Component } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Chat from './Chat.js';\r\nimport './css/Chat.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Popup from 'reactjs-popup';\r\nimport currentUser from './backend/currentUser.js';\r\nimport loginData from './backend/loginBackend.js';\r\n\r\nclass MessageList extends Component {\r\n    openList() {\r\n        document.getElementById(\"userList\").style.display = \"block\";\r\n    }\r\n\r\n    closeList() {\r\n        document.getElementById(\"userList\").style.display = \"none\";\r\n    }\r\n\r\n    openChat() {\r\n        document.getElementById(\"chat\").style.display = \"block\";\r\n    }\r\n\r\n    closeChat() {\r\n        document.getElementById(\"chat\").style.display = \"none\";\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    componentDidUpdate() {\r\n    }\r\n\r\n    setChat(user) {\r\n\r\n    }\r\n    renderChat() {\r\n        if (this.otherUser !== undefined)\r\n            return <Chat user=\"this.otherUser\" />\r\n    }\r\n\r\n    redirectClick() {\r\n        let tempUserEmail = \"noemail@email.com\";\r\n\r\n        if (tempUserEmail.localeCompare(currentUser.getUser().email) !== 0) // checks if there is a current user, if there isn't show login\r\n        {\r\n            return (\r\n                <Link className=\"link\" to={`/users`}>\r\n                    {/*onClick={this.openList*/}\r\n                    <button className=\"open-button\">Messages</button>\r\n                </Link>\r\n            )\r\n        }\r\n        else // popup to login\r\n        {\r\n            return (\r\n                <div>\r\n                    <Popup contentStyle={{ width: \"auto\" }}\r\n                        trigger={<Link className=\"link\">\r\n                        {/*onClick={this.openList*/}\r\n                        <button className=\"open-button\">Messages</button>\r\n                    </Link>}\r\n                        modal\r\n                        nested\r\n\r\n                    >\r\n                        {close => (\r\n                            <div>\r\n                                <form id=\"loginForm\" className='login-form'>\r\n                                    <h1>Login to Let's Donate</h1>\r\n                                    <input\r\n                                        className='email'\r\n                                        type='email'\r\n                                        name='email'\r\n                                        placeholder=\"Email\"\r\n                                    />\r\n                                    <input\r\n                                        className='password'\r\n                                        type='password'\r\n                                        name='password'\r\n                                        placeholder=\"Password\"\r\n                                    />\r\n                                    <br />\r\n                                    <input\r\n                                        className='login-button'\r\n                                        type='button'\r\n                                        value='Log In'\r\n                                        onClick={() => { loginData() }}\r\n                                    // calls function from loginBackend.js and passes login information\r\n                                    />\r\n                                    <br />\r\n                                    <Link\r\n                                        className='signup-button'\r\n                                        type='button'\r\n                                        to={\"/register\"}\r\n                                        onClick={close}\r\n                                    >SignUp</Link>\r\n                                    <br />\r\n                                    <Link\r\n                                        className='reset-password-button'\r\n                                        type='button'\r\n                                        to={\"/recovery\"}\r\n                                        onClick={close}\r\n                                    >Reset Password</Link>\r\n                                </form>\r\n                            </div>\r\n                        )}\r\n                    </Popup>\r\n                    {/* This button takes a user to their user page if their signed in */}\r\n                    { /* <Link className='userLink' to={\"/User\"}><AccountCircleIcon /></Link> */}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const DUMMY_USERS = [\r\n            \"perborgen\",\r\n            \"n\"\r\n        ]\r\n        let tempUserEmail = \"noemail@email.com\";\r\n\r\n        return (\r\n            <div>\r\n                {tempUserEmail.localeCompare(currentUser.getUser().email) !== 0 && // checks if there is a current user, if there isn't show login\r\n                    this.redirectClick()\r\n                }\r\n                {/* list of users that have a chat history */}\r\n                <div className=\"userList\" id=\"userList\">\r\n                    <div className=\"container\">\r\n                        <Grid container>\r\n                            <Grid item xs={12}>\r\n                                <ul>\r\n                                    {DUMMY_USERS.map(DUMMY_USER => {\r\n                                        return (\r\n                                            <li className=\"user\" key={DUMMY_USER.id}>\r\n                                                <div onClick={this.openChat}>\r\n                                                    <b>{DUMMY_USER}</b>\r\n                                                </div>\r\n                                            </li>\r\n                                        )\r\n                                    })}\r\n                                </ul>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <button type=\"button\" className=\"btn cancel\" onClick={this.closeList}>Close</button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </div>\r\n                </div>\r\n                <Chat id=\"chat\" />\r\n                {/* {this.renderChat} */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default MessageList;","import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();","import React from 'react'\r\n\r\nfunction DisplayMessage( message) {\r\n    return (\r\n        <div>\r\n            <p>{message}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DisplayMessage\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios';\r\nimport queryString from 'query-string';\r\nimport currentUser from './backend/currentUser.js';\r\nimport DisplayMessage from './DisplayMessage';\r\nimport './css/ChatSpace.css';\r\nexport class ChatSpace extends Component {\r\n   \r\n    state = {\r\n        items: [{message:\"\", room:\"\"}],\r\n        name: '',\r\n        room: '',\r\n        message: '',\r\n        filled: false\r\n      }\r\n\r\n      componentDidMount() {\r\n        \r\n        const { name, room } = queryString.parse(this.props.location.search);\r\n        this.setState({name});\r\n        this.setState({room});\r\n        let searchable = {};\r\n        searchable[\"roomName\"] = room;\r\n        console.log(\"Room is \" ,searchable);\r\n        axios.post(`/api/getMessages`, searchable)\r\n          .then(res => {\r\n            const items = res.data.messages;\r\n            if(res.data.success){\r\n                console.log(\"ressss fatatatta\", res.data);\r\n                this.setState({ items });\r\n                this.setState({filled: true});\r\n                console.log(\"The messages are\", this.state.items);\r\n            }\r\n        })\r\n\r\n        \r\n    }\r\n\r\n    sendMessage(event){\r\n        event.preventDefault();\r\n        const messageContent = document.getElementById(\"message\").value;\r\n        let data = {};\r\n        if(messageContent!='' && messageContent!=undefined){\r\n            let fullMessage = currentUser.getUser().name.concat(\": \").concat(messageContent);\r\n            data[\"room\"] = this.state.room;\r\n            data[\"message\"] = fullMessage;\r\n            axios.post(`/api/addMessage`, data)\r\n            .then(res => {\r\n                console.log(res);\r\n            });\r\n            console.log(\"Clicked\");\r\n            window.location.reload('/');\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let occurrences = { };\r\n        for(let i = 0, j = this.state.items.length; i < j; i++) \r\n        {\r\n            occurrences[this.state.items[i].message] = (occurrences[this.state.items[i].message] || 0) + 1;\r\n        }\r\n            return (\r\n                <div>\r\n                    {console.log(this.state.items)}\r\n                    <h2 className=\"welcome\">Welcome to {this.state.room}'s chat room</h2>\r\n                    <div className=\"items\">\r\n                        {console.log(\"Itemsssssss\", this.state.items)}\r\n                        \r\n                        \r\n                        {console.log(\"object\", Object.keys(occurrences))};\r\n                        <ul>\r\n                        <li>{Object.keys(occurrences).map(item => \r\n                            <div className=\"message\">\r\n                                {item}\r\n                            </div>\r\n                        )}\r\n                        </li>\r\n                        </ul>\r\n                       \r\n                    \r\n                </div>\r\n                \r\n                    <input type='text' id=\"message\"/>\r\n                \r\n                    <button\r\n                    className=\"button\"\r\n                    onClick={(event) => this.sendMessage(event)}\r\n                    >SEND\r\n                </button>\r\n                </div>\r\n            )\r\n       \r\n    }\r\n}\r\n\r\nexport default ChatSpace\r\n","import React from 'react';\r\n\r\nfunction termsAndConditions() {\r\n    return (\r\n        <div>\r\n            <h1>Terms and Conditions for Let's Donate</h1>\r\n\r\n<h2>Introduction</h2> \r\n  \r\n<p>These Website Standard Terms and Conditions written on this webpage shall manage your use of our website, Let's Donate accessible at https://letsdonate.xyz/.</p>\r\n\r\n<p>These Terms will be applied fully and affect to your use of this Website. By using this Website, you agreed to accept all terms and conditions written in here. You must not use this Website if you disagree with any of these Website Standard Terms and Conditions. These Terms and Conditions have been generated with the help of the <a href=\"https://www.termsandcondiitionssample.com\">Terms And Conditiions Sample</a> and the <a href=\"https://www.generateprivacypolicy.com\">Privacy Policy Generator</a>.</p>\r\n\r\n<p>Minors or people below 18 years old are not allowed to use this Website.</p>\r\n\r\n<h2>Intellectual Property Rights</h2>\r\n\r\n<p>Other than the content you own, under these Terms, Let's Donate and/or its licensors own all the intellectual property rights and materials contained in this Website.</p>\r\n\r\n<p>You are granted limited license only for purposes of viewing the material contained on this Website.</p>\r\n\r\n<h2>Restrictions</h2>\r\n\r\n<p>You are specifically restricted from all of the following:</p>\r\n\r\n<ul>\r\n    <li>publishing any Website material in any other media;</li>\r\n    <li>selling, sublicensing and/or otherwise commercializing any Website material;</li>\r\n    <li>publicly performing and/or showing any Website material;</li>\r\n    <li>using this Website in any way that is or may be damaging to this Website;</li>\r\n    <li>using this Website in any way that impacts user access to this Website;</li>\r\n    <li>using this Website contrary to applicable laws and regulations, or in any way may cause harm to the Website, or to any person or business entity;</li>\r\n    <li>engaging in any data mining, data harvesting, data extracting or any other similar activity in relation to this Website;</li>\r\n    <li>using this Website to engage in any advertising or marketing.</li>\r\n</ul>\r\n\r\n<p>Certain areas of this Website are restricted from being access by you and Let's Donate may further restrict access by you to any areas of this Website, at any time, in absolute discretion. Any user ID and password you may have for this Website are confidential and you must maintain confidentiality as well.</p>\r\n\r\n<h2>Your Content</h2>\r\n\r\n<p>In these Website Standard Terms and Conditions, \"Your Content\" shall mean any audio, video text, images or other material you choose to display on this Website. By displaying Your Content, you grant Let's Donate a non-exclusive, worldwide irrevocable, sub licensable license to use, reproduce, adapt, publish, translate and distribute it in any and all media.</p>\r\n\r\n<p>Your Content must be your own and must not be invading any third-party’s rights. Let's Donate reserves the right to remove any of Your Content from this Website at any time without notice.</p>\r\n\r\n<h2>Your Privacy</h2>\r\n\r\n<p>Please read Privacy Policy.</p>\r\n\r\n<h2>No warranties</h2>\r\n\r\n<p>This Website is provided \"as is,\" with all faults, and Let's Donate express no representations or warranties, of any kind related to this Website or the materials contained on this Website. Also, nothing contained on this Website shall be interpreted as advising you.</p>\r\n\r\n<h2>Limitation of liability</h2>\r\n\r\n<p>In no event shall Let's Donate, nor any of its officers, directors and employees, shall be held liable for anything arising out of or in any way connected with your use of this Website whether such liability is under contract.  Let's Donate, including its officers, directors and employees shall not be held liable for any indirect, consequential or special liability arising out of or in any way related to your use of this Website.</p>\r\n\r\n<h2>Indemnification</h2>\r\n\r\n<p>You hereby indemnify to the fullest extent Let's Donate from and against any and/or all liabilities, costs, demands, causes of action, damages and expenses arising in any way related to your breach of any of the provisions of these Terms.</p>\r\n\r\n<h2>Severability</h2>\r\n\r\n<p>If any provision of these Terms is found to be invalid under any applicable law, such provisions shall be deleted without affecting the remaining provisions herein.</p>\r\n\r\n<h2>Variation of Terms</h2>\r\n\r\n<p>Let's Donate is permitted to revise these Terms at any time as it sees fit, and by using this Website you are expected to review these Terms on a regular basis.</p>\r\n\r\n<h2>Assignment</h2>\r\n\r\n<p>The Let's Donate is allowed to assign, transfer, and subcontract its rights and/or obligations under these Terms without any notification. However, you are not allowed to assign, transfer, or subcontract any of your rights and/or obligations under these Terms.</p>\r\n\r\n<h2>Entire Agreement</h2>\r\n    \r\n<p>These Terms constitute the entire agreement between Let's Donate and you in relation to your use of this Website, and supersede all prior agreements and understandings.</p>\r\n\r\n<h2>Governing Law & Jurisdiction</h2>\r\n\r\n<p>These Terms will be governed by and interpreted in accordance with the laws of the State of us, and you submit to the non-exclusive jurisdiction of the state and federal courts located in us for the resolution of any disputes.</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default termsAndConditions","const bcrypt = require('bcryptjs');\r\nconst axios = require('axios');\r\nconst history = require ('history');\r\n\r\nconst formData = function() {\r\n    // form data\r\n    let name;\r\n    let email;\r\n    let zipcode;\r\n    let password;\r\n    let password2;\r\n    let profileImage;\r\n    let recovery1;\r\n    let recovery2;\r\n\r\n    if(!document.forms.registerForm.name.value &&\r\n        !document.forms.registerForm.email.value &&\r\n        !document.forms.registerForm.zipcode.value &&\r\n        !document.forms.registerForm.password.value &&\r\n        !document.forms.registerForm.password2.value &&\r\n        !document.forms.registerForm.recovery1.value &&\r\n        !document.forms.registerForm.recovery2.value)\r\n    {\r\n        alert(\"Form cannot be empty!\");\r\n        return;\r\n    }\r\n    else\r\n    {\r\n        name = document.forms.registerForm.name.value;\r\n        email = document.forms.registerForm.email.value;\r\n        zipcode = document.forms.registerForm.zipcode.value;\r\n        password = document.forms.registerForm.password.value;\r\n        password2 = document.forms.registerForm.password2.value;\r\n        profileImage = document.forms.registerForm.profileImage;\r\n        recovery1 = document.forms.registerForm.recovery1.value;\r\n        recovery2 = document.forms.registerForm.recovery2.value;\r\n    }\r\n\r\n    if(password.length < 6 && password2.length < 6)\r\n    {\r\n        alert(\"Password should be 6 or more characters\");\r\n        return;\r\n    }\r\n\r\n    console.log(name, email, zipcode, password, password2, profileImage, recovery1, recovery2);\r\n\r\n    // checks if user entered the correct password twice\r\n    if(password.localeCompare(password2) == 0)\r\n    {\r\n        let searchable = {};\r\n        \r\n        searchable[\"searchEmail\"] = email; // login searches registered user database by email\r\n        axios.post('/api/loginUser', searchable)\r\n        .then((result) => {\r\n            if(!result.data.success)\r\n            {\r\n                alert(\"Failed Search\");\r\n            }\r\n            else\r\n            {                \r\n                if(result.data.users.length < 1) // account does not exist\r\n                {\r\n                    let form = new FormData();\r\n\r\n                    form.append(\"imageFile\", profileImage.files[0]);\r\n\r\n                    form.append(\"name\", name);\r\n                    form.append(\"email\", email);\r\n                    form.append(\"zipcode\", zipcode);\r\n                    form.append(\"recovery1\", recovery1);\r\n                    form.append(\"recovery2\", recovery2);\r\n                    form.append(\"claimedProducts\", 0);\r\n                    console.log(form.getAll(\"name\"), form.getAll(\"imageFile\"));\r\n\r\n                    // generate the salt for user password hash\r\n                    \r\n                    // appends encrypted password to form\r\n                    let salt = bcrypt.genSaltSync(10);\r\n                    let hash = bcrypt.hashSync(password, salt);\r\n                    form.append(\"password\", hash);\r\n\r\n                    // console.log(form.getAll(\"name\"));\r\n                    // console.log(form.getAll(\"password\"));\r\n\r\n                    // calls api to register user to database\r\n                    axios.post(\"/api/registerUser\", form, { headers: { 'content-type': \"multipart/form-data\"}})\r\n                    .then((result) => {\r\n                        if(result.data.success){\r\n                            alert(\"Successfully created account\");\r\n                            window.location.replace('/');\r\n                        }else{\r\n                            alert(\"Account Failure Occurred\");\r\n                        }\r\n                    })\r\n                }\r\n                else // account exists\r\n                {\r\n                    alert(\"Account already exists\");\r\n                    return;\r\n                }\r\n            }\r\n        })\r\n    }\r\n    else\r\n    {\r\n        alert(\"Passwords do not match\");\r\n    }\r\n}\r\n\r\nexport default formData;","import React from 'react';\r\nimport './css/register.css';\r\nimport Popup from 'reactjs-popup';\r\nimport terms from './terms';\r\n\r\n// contains function needed to send form information to database\r\nimport formData from './backend/registerBackend.js';\r\n\r\nfunction register() {\r\n\r\n    // very basic user registration form\r\n    // gets information needed to get sent to the database\r\n    // buttons calls function from registerBackend.js\r\n\r\n    return (\r\n        <div>\r\n            <div className='formHeader'>\r\n                <h1>Sign Up to Let's Donate</h1>\r\n                <hr />\r\n            </div>\r\n            <div className='formBody'>\r\n                <form id=\"registerForm\" method=\"post\">\r\n                    <label for=\"name\"><b>Name</b></label><br />\r\n                    <input type=\"text\" name=\"name\" placeholder=\"John Smith\" required /><br />\r\n\r\n                    <label for=\"email\"><b>Email</b></label><br />\r\n                    <input type=\"email\" name=\"email\" placeholder=\"Enter Email\" required /><br />\r\n\r\n                    <label for=\"zipcode\"><b>Zip Code</b></label><br />\r\n                    <input type=\"number\" name=\"zipcode\" placeholder=\"Enter Zip Code\" required /><br />\r\n\r\n                    <label for=\"password\"><b>Password</b></label><br />\r\n                    <input type=\"password\" name=\"password\" placeholder=\"Enter Password\" required /><br />\r\n\r\n                    <label for=\"password2\"><b>Confirm Password</b></label><br />\r\n                    <input type=\"password\" name=\"password2\" placeholder=\"Comfirm Password\" required /><br />\r\n\r\n                    <label><b>Profile Image:</b></label><br />\r\n                    <input type=\"file\" id=\"profileImage\" accept=\"image/jpg,image/jpeg,image/png\" required />\r\n\r\n                    <br />\r\n                    <h2>Recovery Questions</h2>\r\n                    <hr /><br />\r\n\r\n                    <label for=\"recovery1\"><b>What is your mother's maiden name?</b></label><br />\r\n                    <input type=\"text\" name=\"recovery1\" placeholder=\"Smith\" required /><br />\r\n\r\n                    <label for=\"recovery2\"><b>What is the name of your childhood pet?</b></label><br />\r\n                    <input type=\"recovery2\" name=\"recovery2\" placeholder=\"Fido\" required /><br />\r\n\r\n                    <div className=\"signupButton\">\r\n                        <button type=\"button\" onClick={() => { formData() }}>Sign Up</button>\r\n                        <div>\r\n                            <Popup\r\n                                trigger={<button className=\"postButton\"> Terms and Conditions </button>}\r\n                                modal\r\n                                nested\r\n                            >\r\n                                {close => (\r\n                                    <div className=\"popup\">\r\n                                        <button className=\"close\" onClick={close}>&times;</button>\r\n                                        <ul className=\"content\">\r\n                                            {terms()}\r\n                                        </ul>\r\n                                    </div>\r\n                                )}\r\n                            </Popup>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default register\r\n","const bcrypt = require('bcryptjs');\r\nconst axios = require('axios');\r\n\r\nconst recoveryData = function() {\r\n    let email;\r\n    let password;\r\n    let password2;\r\n    let recovery1;\r\n    let recovery2;\r\n\r\n    if(!document.forms.recoveryForm.email.value &&\r\n        !document.forms.recoveryForm.password.value &&\r\n        !document.forms.recoveryForm.password2.value &&\r\n        !document.forms.recoveryForm.recovery1.value &&\r\n        !document.forms.recoveryForm.recovery2.value)\r\n    {\r\n        alert(\"Form cannot be empty!\");\r\n        return;\r\n    }\r\n    else\r\n    {\r\n        email = document.forms.recoveryForm.email.value;\r\n        password = document.forms.recoveryForm.password.value;\r\n        password2 = document.forms.recoveryForm.password2.value;\r\n        recovery1 = document.forms.recoveryForm.recovery1.value;\r\n        recovery2 = document.forms.recoveryForm.recovery2.value;\r\n    }\r\n\r\n    if(password.length < 6 && password2.length < 6)\r\n    {\r\n        alert(\"Password should be 6 or more characters\");\r\n        return;\r\n    }\r\n\r\n    console.log(email, password, password2, recovery1, recovery2);\r\n\r\n    let user;\r\n    let searchable = {};\r\n\r\n    searchable[\"searchEmail\"] = email; // login searches registered user database by email\r\n    axios.post('/api/loginUser', searchable)\r\n    .then((result) => {\r\n        if(!result.data.success) alert(\"Error search database\");\r\n        else\r\n        {\r\n            user = result.data.users; // returns the data from the database\r\n            if(user.length < 1)\r\n            {\r\n                alert(\"Cannot find user\");\r\n                return;\r\n            }\r\n\r\n            if(user[0].recovery1.localeCompare(recovery1) !== 0)\r\n            {\r\n                alert(\"Security question 1 does not match\");\r\n                return;\r\n            }\r\n            if(user[0].recovery2.localeCompare(recovery2) !== 0)\r\n            {\r\n                alert(\"Security question 2 does not match\");\r\n                return;\r\n            }\r\n            \r\n            if(password.localeCompare(password2) !== 0)\r\n            {\r\n                alert(\"Passwords do not match\");\r\n                return;\r\n            }\r\n            else\r\n            {\r\n                // keeps the same data for everything else, but will update the password\r\n                let form = new FormData();\r\n                form.append(\"name\", user[0].name);\r\n                form.append(\"email\", user[0].email);\r\n                form.append(\"zipcode\", user[0].zipcode);\r\n                form.append(\"recovery1\", user[0].recovery1);\r\n                form.append(\"recovery2\", user[0].recovery2);\r\n                form.append(\"imageFile\", user[0].userImage);\r\n                form.append(\"currentEmail\", user[0].email);\r\n\r\n                // encrypt new password\r\n                let salt = bcrypt.genSaltSync(10);\r\n                let hash = bcrypt.hashSync(password, salt);\r\n                form.append(\"password\", hash);\r\n\r\n                // calls api to edit user to database\r\n                axios.post(\"/api/editUser\", form, { headers: { 'content-type': \"multipart/form-data\"}})\r\n                .then((result) => {\r\n                    if(result.data.success){\r\n                        alert(\"New Password Updated Successfully\");\r\n                    }else{\r\n                        alert(\"New Password Failed\");\r\n                    }\r\n                })\r\n                .catch(exception => {\r\n                    alert(\"New Password Failed\");\r\n                })\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nexport default recoveryData;","import React from 'react';\r\nimport './css/register.css';\r\n\r\n// contains function needed to send form information to database\r\nimport recoveryData from './backend/recoveryBackend.js';\r\n\r\nfunction recovery() {\r\n\r\n    // very basic user registration form\r\n    // gets information needed to get sent to the database\r\n    // buttons calls function from registerBackend.js\r\n\r\n    return (\r\n        <div>\r\n            <div className='formHeader'>\r\n                <h1>Password Reset</h1>\r\n                <hr />\r\n            </div>\r\n            <div className='formBody'>\r\n                <form id=\"recoveryForm\" method=\"post\">\r\n                    <label for=\"email\"><b>Email</b></label><br />\r\n                    <input type=\"email\" name=\"email\" placeholder=\"Enter Email\" required/><br />\r\n\r\n                    <label for=\"recovery1\"><b>What is your mother's maiden name?</b></label><br />\r\n                    <input type=\"text\" name=\"recovery1\" placeholder=\"Smith\" required/><br />\r\n\r\n                    <label for=\"recovery2\"><b>What is the name of your childhood pet?</b></label><br />\r\n                    <input type=\"recovery2\" name=\"recovery2\" placeholder=\"Fido\" required/><br />\r\n\r\n                    <hr />\r\n\r\n                    <label for=\"password\"><b>New Password</b></label><br />\r\n                    <input type=\"password\" name=\"password\" placeholder=\"Password\" required/><br />\r\n\r\n                    <label for=\"password2\"><b>Confirm New Password</b></label><br />\r\n                    <input type=\"password\" name=\"password2\" placeholder=\"Password\" required/><br />\r\n\r\n                    <div className=\"signupButton\">\r\n                        <button type=\"button\" onClick={() => { recoveryData() }}>Reset Password</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default recovery\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport \"./css/Card.css\"; \r\nimport currentUser from './backend/currentUser.js';\r\n\r\n/*\r\n**  UserCard.js\r\n**\r\n**  This component is the thumbnail for each user post\r\n*/\r\nfunction UserCard( {id, name, zipcode, email, userImage} ) {\r\n\r\n    let image;\r\n    \r\n    if(userImage !== '' && userImage !== null)\r\n    {\r\n        image = userImage;\r\n    }  \r\n    else\r\n    {\r\n        image = \"../images/nopic.png\"; // default image\r\n    }\r\n    \r\n    return (\r\n        ///chat?name=${currentUser.getUser().name}&room=${name}\r\n        <Link className='link' to={`/chatSpace?name=${currentUser.getUser().name}&room=${name}`}>\r\n            <div className=\"card\"> \r\n                <img  className=\"cardImage border border-light\" \r\n                    src={image}\r\n                    onError={(e) => {\r\n                        e.target.src = '../images/nopic.png' // fallback image\r\n                    }} \r\n                alt=\"\"/>\r\n\r\n                <h3>{name}</h3>\r\n                <h4>Location: {zipcode}</h4>\r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default UserCard\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport UserCard from './UserCard.js';\r\n\r\n\r\nexport class AvailableChatUsers extends Component {\r\n    state = {\r\n        items: []\r\n      }\r\n\r\n      componentDidMount() {\r\n        axios.get(`/api/allUsers`)\r\n          .then(res => {\r\n            const items = res.data;\r\n            this.setState({ items });\r\n          })\r\n      }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"items\">\r\n                {this.state.items.map(item => \r\n                    <UserCard id={item.id} name={item.name} zipcode={item.zipcode} email={item.email} userImage={item.userImage}/>\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AvailableChatUsers\r\n\r\n","import React, { Component } from 'react';\r\nimport { Router, Switch, Route, Link } from 'react-router-dom';\r\nimport './App.css';\r\nimport NavBar from './components/NavBar.js';\r\nimport Home from './components/Home.js';\r\nimport Products from './components/Products.js';\r\nimport Fundraisers from './components/Fundraisers.js';\r\nimport User from './components/User.js';\r\nimport ProductPost from './components/ProductPost.js';\r\nimport FundraiserPost from './components/FundraiserPost.js';\r\nimport SearchResult from './components/searchResult.js';\r\nimport MessageList from './components/MessageList.js';\r\n\r\nimport history from './components/backend/history.js';\r\nimport ChatSpace from './components/ChatSpace.js';\r\nimport register from './components/register.js'\r\nimport recovery from './components/recovery.js'\r\nimport AvailableChatUsers from './components/AvailableChatUsers';\r\nimport currentUser from './components/backend/currentUser.js'; // helper functions to set and get current logged in user\r\n\r\n/*\r\n**  App.js\r\n**\r\n**  This the application.\r\n*/\r\n\r\nclass App extends Component {\r\n  render() {\r\n    let tempUserEmail = \"noemail@email.com\";\r\n    var client = currentUser.getUser().email;\r\n    return (\r\n    <Router history={history}>\r\n      <div className=\"App\">\r\n        {/* This NavBar component will stay at the top regardless of what page the user is on.*/}\r\n        <NavBar currentUser={client}/>\r\n        {/* This switch will allow the user to navigate between each page and url extension. */}\r\n        <Switch>\r\n          <Route path=\"/\" component={Home} exact />\r\n          <Route path=\"/Products\" component={Products} />\r\n          {/* <Route path=\"/Fundraisers\" component={Fundraisers} /> */}\r\n          <Route path=\"/Fundraisers\" component={() => <Fundraisers currentUser={client}/>}/>\r\n          {/* Dynamic route for users by using email */}\r\n          <Route path=\"/User/:email\" component={User} />\r\n          {/* Dynamic route for products by using the product name */}\r\n          <Route path=\"/Product/:id\" component={ProductPost} />\r\n          <Route path=\"/Fundraiser/:id\" component={FundraiserPost} />\r\n          <Route path=\"/search/:table/:term\" component={SearchResult} />\r\n          <Route path=\"/search/products\" component={Products} />\r\n          <Route path=\"/search/fundraisers\" component={Fundraisers} />\r\n          <Route path=\"/register\" component={register} />\r\n          <Route path=\"/recovery\" component={recovery} />\r\n          {/*<Route path=\"/chat\" component={ChatRoom} />*/}\r\n          <Route path=\"/users\" component={AvailableChatUsers} />\r\n          <Route path=\"/chatSpace\" component={ChatSpace} />\r\n          <Route component={Error} />\r\n        </Switch>\r\n        {tempUserEmail.localeCompare(client) !== 0 &&\r\n          <MessageList/>\r\n        }\r\n      </div>\r\n    </Router>\r\n  );}\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n\r\n"],"sourceRoot":""}